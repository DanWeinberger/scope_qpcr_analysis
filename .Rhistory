l1$state[l1$piab_pos==0 & !is.na(l1$piab_pos)] <- 1
l1$state[l1$piab_pos==1 & !is.na(l1$piab_pos)] <- 2
#l1$state <- as.factor(l1$state)
q1 <- rbind(c( 0,0.01),
c(0.01,0)
)
l1 <- l1[order(l1$ID, l1$day),]
l2 <- l1[, c('state','child_contact_u5','child_contact_1_5','child_contact','Gender','child_contact_u12m','child_contact_13_23m',"child_contact_24_59m","child_contact_5_10y",'child_contact_over10y','child_contact_1_10', 'ID','day', 'season','child_contact_often','child_contact_hours')]
msm.mod1 <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_u12m))
msm.mod1
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_1_5))
msm.mod1b
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_u5))
msm.mod1b
msm.mod1c <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_1_10))
msm.mod1c
#clearance rate as a function of child contacts?
msm.mod1e <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list( "2-1" = ~ child_contact_1_10))
msm.mod1e
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplot2)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
lyta.plot <- heat.fun(target='lyta')
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplot2)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr_fun()
plot(clean_pcr$pcr_summary_long$lyta, clean_pcr$pcr_summary_long$piab, xlim= c(45,0), ylim=c(45,0), xlab='lytA', ylab='piaB', bty='l')
abline(a=0, b=1)
abline(h=40, v=40, col='gray', lty=2)
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
lyta.plot <- heat.fun(target='lyta')
lyta.plot <- heat.fun(target='lyta')
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
target='piab'
cut1=15
cut2=45
cut3 = 47
cut4=95
cut5=141
#ds1 <- data.array[target,,]
ds1 <- clean_pcr$clean_pcr
ds1$lyta[ds1$lyta==9999] <- NA
ds1$piab[ds1$piab==9999] <- NA
ds1 <- ds1 %>%
filter(ID !='S2_NA')
breakslist<-seq(cut1,cut2,by=1)
weeks<- paste0('Week ', c(0,2,4,6,8,10))
ds1$season <- substr(ds1$ID,1,2)
ds1$seasonid <- as.numeric(substring(ds1$ID, 4))
ds1$seasonhh <- as.numeric(substring(ds1$Household, 4))
ds1 <- ds1 %>%
group_by(season, seasonid, seasonhh) %>%
mutate(sampleID=cur_group_id()) %>%
ungroup() %>%
group_by(season,seasonhh) %>%
mutate(house=group_indices()) %>%
ungroup() %>%
arrange(season,seasonhh, seasonid)
ds.plot <- dcast(ds1, house+sampleID + season + seasonid + seasonhh +HH_order~time, value.var = target)
ds.plot <- ds.plot %>%
filter(!is.na(seasonid))
ds.plot$labels <- paste(ds.plot$season, ds.plot$seasonid, sep='_')
sub1 <- ds.plot[1:cut3,]
gap1 <- which(sub1$HH_order==1) +1
gap1 <- gap1[-length(gap1)]
#First half
heat1 <- (pheatmap(sub1[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap1,
labels_row = sub1$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks))
sub2 <- ds.plot[(cut3+1):cut4,]
gap2 <- which(sub2$HH_order==1) +1
gap2 <- gap2[-length(gap2)]
heat2<-pheatmap(sub2[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap2,
labels_row = sub2$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks)
sub3 <- ds.plot[(cut4+1):cut5,]
gap3 <- which(sub3$HH_order==1) +1
gap3 <- gap3[-length(gap3)]
heat3<-pheatmap(sub3[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap3,
labels_row = sub3$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks)
sub4 <- ds.plot[(cut5+1):nrow(ds.plot),]
gap4 <- which(sub4$HH_order==1) +1
gap4 <- gap4[-length(gap4)]
heat4<-pheatmap(sub4[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap4,
labels_row = sub4$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=T,
labels_col = weeks)
grid.arrange(heat1[[4]],heat2[[4]],heat3[[4]],heat4[[4]],ncol=4)
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
lyta.plot <- heat.fun(target='lyta')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(stringr)
library(reshape2)
a1 <- read_excel('./Data/confidential/IPD serotype data 2014_2018.xls')
a1$serotype <- str_remove(a1$serotype, "^0+")
a1 <- a1[a1$`Age Group` %in% c('50-64', '65+'),]
a1$serotype[a1$serotype %in% c('15B','15C')] <- '15B/C'
a1$serotype[a1$serotype %in% c('6A','6C')] <- '6A/C'
a1$serotype[a1$serotype %in% c('35F/47F')] <- '35F'
a1$serotype[a1$serotype %in% c('15A/F')] <- '15A'
a1$serotype[a1$serotype %in% c('24F')] <- '24A/B/F'
a2 <- a1 %>%
group_by(serotype) %>%
summarize('N_IPD'=n())
inv1 <- read.csv('https://raw.githubusercontent.com/weinbergerlab/Invasiveness_Navajo/main/Results/mcmc_invasive_single_stage.csv')
inv1 <- inv1[, c('st','log.inv.age1')]
b1 <- merge(a2, inv1, by.x='serotype', by.y='st', all=T)
b1$log.inv.age1[is.na(b1$log.inv.age1)] <-  mean(inv1$log.inv.age1) #if missing, assign the mean
b1$N_IPD[is.na(b1$N_IPD)] <- 0.5
b1$invasiveness <- exp(b1$log.inv.age1)
b1$carr_est <- b1$N_IPD / b1$invasiveness/10000
b1$carr_prop <- b1$carr_est/sum(b1$carr_est)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(stringr)
library(reshape2)
a1 <- read_excel('./Data/confidential/IPD serotype data 2014_2018.xls')
a1$serotype <- str_remove(a1$serotype, "^0+")
a1 <- a1[a1$`Age Group` %in% c('50-64', '65+'),]
a1$serotype[a1$serotype %in% c('15B','15C')] <- '15B/C'
a1$serotype[a1$serotype %in% c('6A','6C')] <- '6A/C'
a1$serotype[a1$serotype %in% c('35F/47F')] <- '35F'
a1$serotype[a1$serotype %in% c('15A/F')] <- '15A'
a1$serotype[a1$serotype %in% c('24F')] <- '24A/B/F'
a2 <- a1 %>%
group_by(serotype) %>%
summarize('N_IPD'=n())
inv1 <- read.csv('https://raw.githubusercontent.com/weinbergerlab/Invasiveness_Navajo/main/Results/mcmc_invasive_single_stage.csv')
inv1 <- inv1[, c('st','log.inv.age1')]
b1 <- merge(a2, inv1, by.x='serotype', by.y='st', all=T)
b1$log.inv.age1[is.na(b1$log.inv.age1)] <-  mean(inv1$log.inv.age1) #if missing, assign the mean
b1$N_IPD[is.na(b1$N_IPD)] <- 0.5
b1$invasiveness <- exp(b1$log.inv.age1)
b1$carr_est <- b1$N_IPD / b1$invasiveness/10000
b1$carr_prop <- b1$carr_est/sum(b1$carr_est)
c1 <- b1
c1$st_merge <- c1$serotype
c1$st_merge[c1$serotype %in% c('10A','10F','10B','10C')] <- '10A/B/F/C'
c1$st_merge[c1$serotype %in% c('11A','11D','11B','11C', '11F')] <- '11A/D/B/C/F'
c1$st_merge[c1$serotype %in% c('12A','46','12F','12B', '44')] <- '12A/46/B/F/44'
c1$st_merge[c1$serotype %in% c('15A','15F')] <- '15A/F'
c1$st_merge[c1$serotype %in% c('15B','15C')] <- '15B/C'
c1$st_merge[c1$serotype %in% c('18A','18B', '18C', '18F')] <- '18A/B/C/F'
c1$st_merge[c1$serotype %in% c('19A', '19F')] <- '19A/F'
c1$st_merge[c1$serotype %in% c('19B', '19C')] <- '19B/C'
c1$st_merge[c1$serotype %in% c('22F', '22A')] <- '22F/A'
c1$st_merge[c1$serotype %in% c('23B', '23F')] <- '23B/F'
c1$st_merge[c1$serotype %in% c('24A', '24B', '24F')] <- '24A/B/F'
c1$st_merge[c1$serotype %in% c('25A', '25F')] <- '25A/F'
c1$st_merge[c1$serotype %in% c('32A','32F')] <- '32A/F'
c1$st_merge[c1$serotype %in% c('33B','33D','33C')] <- '33B/D/C'
c1$st_merge[c1$serotype %in% c('33F','33A')] <- '33F/A'
c1$st_merge[c1$serotype %in% c('35A','35C','35F','47F')] <- '35A/C/F/47F'
c1$st_merge[c1$serotype %in% c('6A','6C','6D','6B', '6A/C')] <- '6A/C/D'
c1$st_merge[c1$serotype %in% c('7B','7C','40')] <- '7B/C/40'
c1$st_merge[c1$serotype %in% c('7F','7A')] <- '7F/A'
c1$st_merge[c1$serotype %in% c('9A','9V')] <- '9A/V'
c1$st_merge[c1$serotype %in% c('9N','9L')] <- '9N/L'
d1 <- merge(c1, fpr, by.x='st_merge', by.y='variable', all=T)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(stringr)
library(reshape2)
a1 <- read_excel('./Data/confidential/IPD serotype data 2014_2018.xls')
a1$serotype <- str_remove(a1$serotype, "^0+")
a1 <- a1[a1$`Age Group` %in% c('50-64', '65+'),]
a1$serotype[a1$serotype %in% c('15B','15C')] <- '15B/C'
a1$serotype[a1$serotype %in% c('6A','6C')] <- '6A/C'
a1$serotype[a1$serotype %in% c('35F/47F')] <- '35F'
a1$serotype[a1$serotype %in% c('15A/F')] <- '15A'
a1$serotype[a1$serotype %in% c('24F')] <- '24A/B/F'
a2 <- a1 %>%
group_by(serotype) %>%
summarize('N_IPD'=n())
inv1 <- read.csv('https://raw.githubusercontent.com/weinbergerlab/Invasiveness_Navajo/main/Results/mcmc_invasive_single_stage.csv')
inv1 <- inv1[, c('st','log.inv.age1')]
b1 <- merge(a2, inv1, by.x='serotype', by.y='st', all=T)
b1$log.inv.age1[is.na(b1$log.inv.age1)] <-  mean(inv1$log.inv.age1) #if missing, assign the mean
b1$N_IPD[is.na(b1$N_IPD)] <- 0.5
b1$invasiveness <- exp(b1$log.inv.age1)
b1$carr_est <- b1$N_IPD / b1$invasiveness/10000
b1$carr_prop <- b1$carr_est/sum(b1$carr_est)
c1 <- b1
c1$st_merge <- c1$serotype
c1$st_merge[c1$serotype %in% c('10A','10F','10B','10C')] <- '10A/B/F/C'
c1$st_merge[c1$serotype %in% c('11A','11D','11B','11C', '11F')] <- '11A/D/B/C/F'
c1$st_merge[c1$serotype %in% c('12A','46','12F','12B', '44')] <- '12A/46/B/F/44'
c1$st_merge[c1$serotype %in% c('15A','15F')] <- '15A/F'
c1$st_merge[c1$serotype %in% c('15B','15C')] <- '15B/C'
c1$st_merge[c1$serotype %in% c('18A','18B', '18C', '18F')] <- '18A/B/C/F'
c1$st_merge[c1$serotype %in% c('19A', '19F')] <- '19A/F'
c1$st_merge[c1$serotype %in% c('19B', '19C')] <- '19B/C'
c1$st_merge[c1$serotype %in% c('22F', '22A')] <- '22F/A'
c1$st_merge[c1$serotype %in% c('23B', '23F')] <- '23B/F'
c1$st_merge[c1$serotype %in% c('24A', '24B', '24F')] <- '24A/B/F'
c1$st_merge[c1$serotype %in% c('25A', '25F')] <- '25A/F'
c1$st_merge[c1$serotype %in% c('32A','32F')] <- '32A/F'
c1$st_merge[c1$serotype %in% c('33B','33D','33C')] <- '33B/D/C'
c1$st_merge[c1$serotype %in% c('33F','33A')] <- '33F/A'
c1$st_merge[c1$serotype %in% c('35A','35C','35F','47F')] <- '35A/C/F/47F'
c1$st_merge[c1$serotype %in% c('6A','6C','6D','6B', '6A/C')] <- '6A/C/D'
c1$st_merge[c1$serotype %in% c('7B','7C','40')] <- '7B/C/40'
c1$st_merge[c1$serotype %in% c('7F','7A')] <- '7F/A'
c1$st_merge[c1$serotype %in% c('9A','9V')] <- '9A/V'
c1$st_merge[c1$serotype %in% c('9N','9L')] <- '9N/L'
#ps1 <- read_excel('https://github.com/DanWeinberger/pneumostrip_testing/blob/master/Data/ps_data_updated.xlsx?raw=true')
ps1 <- read_excel('./Data/pneumostrip_negatives/ps_data_updated.xlsx')
ps1.m <- reshape2::melt(ps1, id.vars=c('Pool','lytA_pos_pool'))
ps1.m$value <- factor(ps1.m$value, levels=c(0,1,2,3,4))
ps1.m <- ps1.m[!is.na(ps1.m$Pool),]
ps1.m$poolname <- paste(ps1.m$lytA_pos_pool, ps1.m$Pool, sep='_')
ps1.m$pos_pneumostrip <- 0
ps1.m$pos_pneumostrip[ps1.m$value %in% c('1','2','4')] <- 1
fpr_lyta_pos <- ps1.m[ps1.m$lytA_pos_pool==1,] %>%
group_by(variable) %>%
summarize('fpr_lyta_pos'=mean(pos_pneumostrip))
fpr_lyta_neg <- ps1.m[ps1.m$lytA_pos_pool==0,] %>%
group_by(variable) %>%
summarize('fpr_lyta_neg'=mean(pos_pneumostrip))
fpr <- merge(fpr_lyta_pos, fpr_lyta_neg, by='variable',all=T)
plot(fpr$fpr_lyta_pos, fpr$fpr_lyta_neg, xlim=c(0,1), ylim=c(0,1))
abline(a=0, b=1)
fpr$fpr_any <- (fpr$fpr_lyta_pos + fpr$fpr_lyta_neg)/2
d1 <- merge(c1, fpr, by.x='st_merge', by.y='variable', all=T)
d1 <- d1[,c('st_merge','serotype','fpr_any','carr_prop')]
d1$carr_prop[is.na(d1$carr_prop)] <- min(d1$carr_prop, na.rm=T)
A=1
c1$probability_pos <- (A*c1$carr_prop) /((A*c1$carr_prop) + (1-c1$carr_prop)*c1$fpr_any )
A=1
c1$probability_pos <- (A*d1$carr_prop) /((A*d1$carr_prop) + (1-d1$carr_prop)*d1$fpr_any )
names(d1)
A=1
d1$probability_pos <- (A*d1$carr_prop) /((A*d1$carr_prop) + (1-d1$carr_prop)*d1$fpr_any )
res1 <- d1[,c('st_merge','serotype','probability_pos')]
res1 <- res1[order(-res1$probability_pos),]
res1$serotype[is.na(res1$serotype)] <- res1$st_merge[is.na(res1$serotype)]
write.csv(res1, './Data/pneumostrip_ranking.csv')
q1 <- read_excel('./Data/qpcr_multiplex/HCW_Multiplex_masterfile.xlsx', sheet='fp_rate')
q1 <- read_excel('./Data/qpcr_multiplex/ HCW_Multiplex_masterfile.xlsx', sheet='fp_rate')
q1 <- read_excel('./Data/qpcr_multiplex/HCW_Multiplex_masterfile .xlsx', sheet='fp_rate')
q1 <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
q1 <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
q1$serotype
c1 <- b1
c1$st_merge <- c1$serotype
c1$st_merge[c1$serotype %in% c('10A','10F','10B','10C')] <- '10A/B/F/C'
c1$st_merge[c1$serotype %in% c('11A','11D','11B','11C', '11F')] <- '11A/D/B/C/F'
c1$st_merge[c1$serotype %in% c('12A','46','12F','12B', '44')] <- '12A/46/B/F/44'
c1$st_merge[c1$serotype %in% c('15A','15F')] <- '15A/F'
c1$st_merge[c1$serotype %in% c('15B','15C')] <- '15B/C'
c1$st_merge[c1$serotype %in% c('18A','18B', '18C', '18F')] <- '18A/B/C/F'
c1$st_merge[c1$serotype %in% c('19A', '19F')] <- '19A/F'
c1$st_merge[c1$serotype %in% c('19B', '19C')] <- '19B/C'
c1$st_merge[c1$serotype %in% c('22F', '22A')] <- '22F/A'
c1$st_merge[c1$serotype %in% c('23B', '23F')] <- '23B/F'
c1$st_merge[c1$serotype %in% c('24A', '24B', '24F')] <- '24A/B/F'
c1$st_merge[c1$serotype %in% c('25A', '25F')] <- '25A/F'
c1$st_merge[c1$serotype %in% c('32A','32F')] <- '32A/F'
c1$st_merge[c1$serotype %in% c('33B','33D','33C')] <- '33B/D/C'
c1$st_merge[c1$serotype %in% c('33F','33A')] <- '33F/A'
c1$st_merge[c1$serotype %in% c('35A','35C','35F','47F')] <- '35A/C/F/47F'
c1$st_merge[c1$serotype %in% c('6A','6C','6D','6B', '6A/C')] <- '6A/C/D'
c1$st_merge[c1$serotype %in% c('7B','7C','40')] <- '7B/C/40'
c1$st_merge[c1$serotype %in% c('7F','7A')] <- '7F/A'
c1$st_merge[c1$serotype %in% c('9A','9V')] <- '9A/V'
c1$st_merge[c1$serotype %in% c('9N','9L')] <- '9N/L'
qpcr_fpr <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
names(qpcr_fpr)
h1 <-  merge(g1, qpcr_fpr, by.x='st_merge', by.y='variable', all=T)
qpcr_fpr <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
g1 <- b1
g1$st_merge <- g1$serotype
g1$st_merge[g1$serotype %in% c('11A','11D','11E')] <- '11 ade'
g1$st_merge[g1$serotype %in% c('12A','46','12F','12B', '44')] <- '12/44/46'
g1$st_merge[g1$serotype %in% c('15B','15C')] <- '15 B/C'
1$st_merge[g1$serotype %in% c('23B', '23F')] <- '23FAB' #leave out 23A bc it is separate as well
qpcr_fpr <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
g1 <- b1
g1$st_merge <- g1$serotype
g1$st_merge[g1$serotype %in% c('11A','11D','11E')] <- '11 ade'
g1$st_merge[g1$serotype %in% c('12A','46','12F','12B', '44')] <- '12/44/46'
g1$st_merge[g1$serotype %in% c('15B','15C')] <- '15 B/C'
g1$st_merge[g1$serotype %in% c('23B', '23F')] <- '23FAB' #leave out 23A bc it is separate as well
g1$st_merge[g1$serotype %in% c('33F','33A')] <- '33 a/f'
g1$st_merge[g1$serotype %in% c('6A','6C','6D','6B', '6A/C')] <- '6abcd'
g1$st_merge[g1$serotype %in% c('7F','7A')] <- '7f/a'
g1$st_merge[g1$serotype %in% c('9A','9V')] <- '9 v/a'
h1 <-  merge(g1, qpcr_fpr, by.x='st_merge', by.y='variable', all=T)
names(g1)
h1 <-  merge(g1, qpcr_fpr, by.x='st_merge', by.y='serotype', all=T)
d1 <- d1[,c('st_merge','serotype','fpr_any','carr_prop')]
names(g1)
g1 <- g1%>%
select(carr_prop, st_merge)
h1 <-  merge(g1, qpcr_fpr, by.x='st_merge', by.y='serotype', all=T)
h1 <- h1[,c('st_merge','serotype','fpr_any','carr_prop')]
names(h1)
h1$carr_prop[is.na(h1$carr_prop)] <- min(h1$carr_prop, na.rm=T)
h1$probability_pos <- (A*h1$carr_prop) /((A*h1$carr_prop) + (1-h1$carr_prop)*h1$fp_percent )
res1 <- h1[,c('st_merge','serotype','probability_pos')]
names(h1)
res1 <- h1[,c('st_merge','probability_pos')]
res1 <- res1[order(-res1$probability_pos),]
res1$serotype[is.na(res1$serotype)] <- res1$st_merge[is.na(res1$serotype)]
View(res1)
g1 <- g1%>%
select(carr_prop, st_merge, serotype)
qpcr_fpr <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
g1 <- b1
g1$st_merge <- g1$serotype
g1$st_merge[g1$serotype %in% c('11A','11D','11E')] <- '11 ade'
g1$st_merge[g1$serotype %in% c('12A','46','12F','12B', '44')] <- '12/44/46'
g1$st_merge[g1$serotype %in% c('15B','15C')] <- '15 B/C'
g1$st_merge[g1$serotype %in% c('23B', '23F')] <- '23FAB' #leave out 23A bc it is separate as well
g1$st_merge[g1$serotype %in% c('33F','33A')] <- '33 a/f'
g1$st_merge[g1$serotype %in% c('6A','6C','6D','6B', '6A/C')] <- '6abcd'
g1$st_merge[g1$serotype %in% c('7F','7A')] <- '7f/a'
g1$st_merge[g1$serotype %in% c('9A','9V')] <- '9 v/a'
g1 <- g1%>%
select(carr_prop, st_merge, serotype)
h1 <-  merge(g1, qpcr_fpr, by.x='st_merge', by.y='serotype', all=T)
h1$carr_prop[is.na(h1$carr_prop)] <- min(h1$carr_prop, na.rm=T)
A=1
h1$probability_pos <- (A*h1$carr_prop) /((A*h1$carr_prop) + (1-h1$carr_prop)*h1$fp_percent )
res1 <- h1[,c('st_merge','probability_pos')]
res1 <- res1[order(-res1$probability_pos),]
res1$serotype[is.na(res1$serotype)] <- res1$st_merge[is.na(res1$serotype)]
write.csv(res1, './Data/qpcr_ranking.csv')
A=1
h1$probability_pos <- (A*h1$carr_prop) /((A*h1$carr_prop) + (1-h1$carr_prop)*h1$fp_percent )
res2 <- h1[,c('st_merge','probability_pos')]
res2 <- res2[order(-res2$probability_pos),]
res2$serotype[is.na(res2$serotype)] <- res2$st_merge[is.na(res2$serotype)]
write.csv(res2, './Data/qpcr_ranking.csv')
View(res1)
View(res2)
qpcr_fpr <- read_excel('./Data/qpcr_multiplex/HCW_Mutliplex_masterfile .xlsx', sheet='fp_rate')
g1 <- b1
g1$st_merge <- g1$serotype
g1$st_merge[g1$serotype %in% c('11A','11D','11E')] <- '11 ade'
g1$st_merge[g1$serotype %in% c('12A','46','12F','12B', '44')] <- '12/44/46'
g1$st_merge[g1$serotype %in% c('15B','15C')] <- '15 B/C'
g1$st_merge[g1$serotype %in% c('23B', '23F')] <- '23FAB' #leave out 23A bc it is separate as well
g1$st_merge[g1$serotype %in% c('33F','33A')] <- '33 a/f'
g1$st_merge[g1$serotype %in% c('6A','6C','6D','6B', '6A/C')] <- '6abcd'
g1$st_merge[g1$serotype %in% c('7F','7A')] <- '7f/a'
g1$st_merge[g1$serotype %in% c('9A','9V')] <- '9 v/a'
g1 <- g1%>%
select(carr_prop, st_merge, serotype)
h1 <-  merge(g1, qpcr_fpr, by.x='st_merge', by.y='serotype', all=T)
h1$carr_prop[is.na(h1$carr_prop)] <- min(h1$carr_prop, na.rm=T)
A=1
h1$probability_pos <- (A*h1$carr_prop) /((A*h1$carr_prop) + (1-h1$carr_prop)*h1$fp_percent )
res2 <- h1[,c('st_merge','probability_pos')]
res2 <- res2[order(-res2$probability_pos),]
res2$serotype[is.na(res2$serotype)] <- res2$st_merge[is.na(res2$serotype)]
write.csv(res2, './Data/qpcr_ranking.csv')
