<<<<<<< HEAD
legend=F,
labels_col = weeks))
sub2 <- ds.plot[(cut3+1):cut4,]
gap2 <- which(sub2$HH_order==1) +1
gap2 <- gap2[-length(gap2)]
heat2<-pheatmap(sub2[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap2,
labels_row = sub2$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks)
sub3 <- ds.plot[(cut4+1):cut5,]
gap3 <- which(sub3$HH_order==1) +1
gap3 <- gap3[-length(gap3)]
=======
>>>>>>> season2
heat3<-pheatmap(sub3[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap3,
labels_row = sub3$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks)
sub4 <- ds.plot[(cut5+1):nrow(ds.plot),]
gap4 <- which(sub4$HH_order==1) +1
gap4 <- gap4[-length(gap4)]
heat4<-pheatmap(sub4[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap4,
labels_row = sub4$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=T,
labels_col = weeks)
tiff(paste("Heat", target,".tiff"), width=8, height=8, unit='in', res=200)
grid.arrange(heat1[[4]],heat2[[4]],heat3[[4]],heat4[[4]],ncol=4)
dev.off()
<<<<<<< HEAD
c1.m.m <- melt(c1.m[,c('Target','ID','Sample','ct_pos2','Household') ],
=======
grid.arrange(heat1[[4]],heat2[[4]],heat3[[4]],heat4[[4]],ncol=4)
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
c1.m.m <- melt(clean_pcr$pcr_summary[,c('Target','ID','Sample','ct_pos2','Household') ],
>>>>>>> season2
id.vars=c('Target','ID','Sample','Household'))
c1.m.c <- dcast(c1.m.m, ID + Household + Sample  ~Target, fun.aggregate = min, fill=999)
#N people
N.id <- length(unique(c1.m.c$ID))
N.id
#N households
N.hh<- length(unique(c1.m.c$Household))
N.hh
#N samples
nrow(c1.m.c)
#length(unique(c1.m.c$Sample[c1.m$Target=='piab']))
#length(unique(c1.m.c$Sample[c1.m$Target=='lyta']))
#N positive
sum(c1.m.c$piab<40 )
sum(c1.m.c$piab<40  &c1.m.c$lyta>=40)
sum(c1.m.c$piab<40  &c1.m.c$lyta<40)
#% positive
sum(c1.m.c$piab<40 )/nrow(c1.m.c)
#N positive lytA
sum(c1.m.c$lyta<40 )
sum(c1.m.c$lyta<40 )/nrow(c1.m.c)
#Count N people with piaB positives by IDs
c1.m.spl.id <- split(c1.m.c, c1.m.c$ID)
N_pos_people <- sum(sapply(c1.m.spl.id, function(x){
min(x$piab) <40
}
))
N_pos_people
N_pos_people/N.id
#Count N HH with piab positives by IDs
c1.m.spl.id <- split(c1.m.c, c1.m.c$Household)
n_pos_hh <- sum(sapply(c1.m.spl.id, function(x){
min(x$piab) <40
}
))
n_pos_hh
n_pos_hh/N.hh
<<<<<<< HEAD
## Ave age
age1 <- read_excel('./Data/confidential/AGE Scope Participants samples pick-up 06-15-2021.xlsx', skip=1)
names(age1)[1] <- 'ID'
age1 <- age1[ which(age1$ID %in% unique(c1.m.c$ID)),]
mean(age1$AGE)
range(age1$AGE)
?seq
heat.fun <- function(data.array=d1.a, target='piab', cut1=15, cut2=45, cut3 = 47){
ds1 <- data.array[target,,]
ds1[ds1==9999] <- NA
breakslist<-seq(cut1,cut2,by=1)
weeks<- paste0('Week ', c(0,2,4,6,8,10))
house <- as.numeric(word(dimnames(ds1)[[1]], 2, sep = "_"))
sampleID <- as.numeric(word(dimnames(ds1)[[1]], 1, sep = "_"))
#First half
heat1 <- (pheatmap(ds1[1:cut3,],
cluster_cols = F,
cluster_rows = F,
gaps_row = c(head(as.numeric(cumsum(table(house[1:cut3]))), -1)),
labels_row = sampleID[1:cut3],
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks))
heat2<-pheatmap(ds1[(cut3+1):nrow(ds1),],
cluster_cols = F,
cluster_rows = F,
gaps_row = c(head(as.numeric(cumsum(table(house[(cut3+1):nrow(ds1)]))), -1)),
labels_row = sampleID[(cut3+1):nrow(ds1)],
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=T,
labels_col = weeks)
tiff(paste("Heat", target,".tiff"), width=4, height=8, unit='in', res=200)
grid.arrange(heat1[[4]],heat2[[4]],ncol=2)
dev.off()
out.graph <- grid.arrange(heat1[[4]],heat2[[4]],ncol=2)
return(out.graph)
}
=======
# ## Ave age
# age1 <- read_excel('./Data/confidential/AGE Scope Participants samples pick-up 06-15-2021.xlsx', skip=1)
# names(age1)[1] <- 'ID'
# age1 <- age1[ which(age1$ID %in% unique(c1.m.c$ID)),]
# mean(age1$AGE)
# range(age1$AGE)
s2_data <- clean_s2_surveys()
View(s2_data$survey_and_pcr_s2)
View(s2_data$survey_and_pcr_s2)
s2_surv <- read.csv('./Data/confidential/Season_2_Surveys/Uptodat Fortnightly_Wyllie_DATA_2022-07-21_1314 .csv') %>%
rename(scope_id=participant_id,
child_contact=child_contact_2weeks,
child_contact_u12m=child_contact_age___1,
child_contact_13_23m=child_contact_age___2,
child_contact_24_59m=child_contact_age___3,
child_contact_5_10y=child_contact_age___4,
child_contact_over10y=child_contact_age___5,
activity_community_center=activities_describe___1,
activity_friends=activities_describe___2,
activity_family=activities_describe___3,
acitivity_fitness=activities_describe___4,
activity_other=activities_describe___5
) %>%
mutate(ID = paste0('S2_',gsub("\\..*","",scope_id)) , time=visit_number)
table(s2_surv$visit_number)
d1.ds <- readRDS( './Data/PCR_compiled.rds')
s1_demographics <- read_excel('./Data/scope_demographics deidentified S1.xlsx') %>%
rename(`season 1 scope ID`=ID) %>%
mutate(`season 1 scope ID`=as.numeric(`season 1 scope ID`))
s2_demographics_b <- read_excel('./Data/confidential/New Participants SCOPE_season 2.xlsx', sheet='repeat participant cheat sheet')
s2_demographics_b2 <- left_join(s2_demographics_b,s1_demographics, by="season 1 scope ID") %>%
rename(ID=`season 2 scope ID`) %>%
select(ID, Age, Gender, Race, Ethnicity)
s2_demographics_a <- read_excel('./Data/confidential/New Participants SCOPE_season 2.xlsx', sheet='new participants season 2') %>%
rename(ID = `scope ID`, Race = `How would you describe your ethnicity?`,
Ethnicity = `Would you consider yourself Hispanic or Non-Hispanic?`,
dob= `What is your date of birth?`
) %>%
mutate(Age = lubridate::time_length(difftime(as.Date('2022-01-01'), dob), "years") ) %>%
select(ID, Age, Gender, Race, Ethnicity)
s2_demographics <- bind_rows(s2_demographics_a, s2_demographics_b2) %>%
mutate(ID= paste0('S2_',ID))
s2_pcr <- d1.ds[grep('S2', d1.ds$ID),]
s2_a <- merge(s2_pcr, s2_surv, by=c('ID','time'), all=T) %>%
mutate(piab_pos = 1*(piab<40))
N_surveys <- dcast(s2_a[c('ID','time','child_contact')], ID~time, fun.aggregate = length)
s2_a <- s2_a %>%
filter(!is.na(time))
s2_a$child_contact[is.na(s2_a$child_contact)] <- 9999
s2_a$child_contact[is.infinite(s2_a$child_contact)] <- 9999
s2_a$child_contact_u12m[is.na(s2_a$child_contact_u12m)] <-9999
s2_a$child_contact_13_23m[is.na(s2_a$child_contact_13_23m)] <-9999
s2_a$child_contact_24_59m[is.na(s2_a$child_contact_24_59m)] <-9999
s2_a$child_contact_5_10y[is.na(s2_a$child_contact_5_10y)] <-9999
s2_a$child_contact_over10y[is.na(s2_a$child_contact_over10y)] <-9999
s2_a <- merge(s2_a,s2_demographics, by='ID', all=T)
names(s2_a)
s2_a <- s2_a %>%
group_by(ID, time) %>%
mutate(repN=row_number()) %>%
ungroup()
s2_a <- merge(s2_pcr, s2_surv, by=c('ID','time'), all=T) %>%
mutate(piab_pos = 1*(piab<40))
N_surveys <- dcast(s2_a[c('ID','time','child_contact')], ID~time, fun.aggregate = length)
s2_a <- s2_a %>%
filter(!is.na(time))
s2_a$child_contact[is.na(s2_a$child_contact)] <- 9999
s2_a$child_contact[is.infinite(s2_a$child_contact)] <- 9999
s2_a$child_contact_u12m[is.na(s2_a$child_contact_u12m)] <-9999
s2_a$child_contact_13_23m[is.na(s2_a$child_contact_13_23m)] <-9999
s2_a$child_contact_24_59m[is.na(s2_a$child_contact_24_59m)] <-9999
s2_a$child_contact_5_10y[is.na(s2_a$child_contact_5_10y)] <-9999
s2_a$child_contact_over10y[is.na(s2_a$child_contact_over10y)] <-9999
s2_a <- merge(s2_a,s2_demographics, by='ID', all=T)
nrow(s2_a)
s2_a <- s2_a %>%
group_by(ID, time) %>%
mutate(repN=row_number()) %>%
filter(repN==1) %>%
ungroup()
nrow(s2_a)
N_contacts <- dcast(s2_a[c('ID','time','child_contact')], ID~time, fun.aggregate = max, na.rm=T, fill=9999)
##Clean S2 surveys
library(dplyr)
clean_s2_surveys <- function(){
s2_surv <- read.csv('./Data/confidential/Season_2_Surveys/Uptodat Fortnightly_Wyllie_DATA_2022-07-21_1314 .csv') %>%
rename(scope_id=participant_id,
child_contact=child_contact_2weeks,
child_contact_u12m=child_contact_age___1,
child_contact_13_23m=child_contact_age___2,
child_contact_24_59m=child_contact_age___3,
child_contact_5_10y=child_contact_age___4,
child_contact_over10y=child_contact_age___5,
activity_community_center=activities_describe___1,
activity_friends=activities_describe___2,
activity_family=activities_describe___3,
acitivity_fitness=activities_describe___4,
activity_other=activities_describe___5
) %>%
mutate(ID = paste0('S2_',gsub("\\..*","",scope_id)) , time=visit_number)
table(s2_surv$visit_number)
d1.ds <- readRDS( './Data/PCR_compiled.rds')
s1_demographics <- read_excel('./Data/scope_demographics deidentified S1.xlsx') %>%
rename(`season 1 scope ID`=ID) %>%
mutate(`season 1 scope ID`=as.numeric(`season 1 scope ID`))
s2_demographics_b <- read_excel('./Data/confidential/New Participants SCOPE_season 2.xlsx', sheet='repeat participant cheat sheet')
s2_demographics_b2 <- left_join(s2_demographics_b,s1_demographics, by="season 1 scope ID") %>%
rename(ID=`season 2 scope ID`) %>%
select(ID, Age, Gender, Race, Ethnicity)
s2_demographics_a <- read_excel('./Data/confidential/New Participants SCOPE_season 2.xlsx', sheet='new participants season 2') %>%
rename(ID = `scope ID`, Race = `How would you describe your ethnicity?`,
Ethnicity = `Would you consider yourself Hispanic or Non-Hispanic?`,
dob= `What is your date of birth?`
) %>%
mutate(Age = lubridate::time_length(difftime(as.Date('2022-01-01'), dob), "years") ) %>%
select(ID, Age, Gender, Race, Ethnicity)
s2_demographics <- bind_rows(s2_demographics_a, s2_demographics_b2) %>%
mutate(ID= paste0('S2_',ID))
s2_pcr <- d1.ds[grep('S2', d1.ds$ID),]
s2_a <- merge(s2_pcr, s2_surv, by=c('ID','time'), all=T) %>%
mutate(piab_pos = 1*(piab<40))
N_surveys <- dcast(s2_a[c('ID','time','child_contact')], ID~time, fun.aggregate = length)
s2_a <- s2_a %>%
filter(!is.na(time))
s2_a$child_contact[is.na(s2_a$child_contact)] <- 9999
s2_a$child_contact[is.infinite(s2_a$child_contact)] <- 9999
s2_a$child_contact_u12m[is.na(s2_a$child_contact_u12m)] <-9999
s2_a$child_contact_13_23m[is.na(s2_a$child_contact_13_23m)] <-9999
s2_a$child_contact_24_59m[is.na(s2_a$child_contact_24_59m)] <-9999
s2_a$child_contact_5_10y[is.na(s2_a$child_contact_5_10y)] <-9999
s2_a$child_contact_over10y[is.na(s2_a$child_contact_over10y)] <-9999
s2_a <- merge(s2_a,s2_demographics, by='ID', all=T)
s2_a <- s2_a %>%
group_by(ID, time) %>%
mutate(repN=row_number()) %>%
filter(repN==1) %>%
ungroup()
N_contacts <- dcast(s2_a[c('ID','time','child_contact')], ID~time, fun.aggregate = max, na.rm=T, fill=9999)
out.list <- list('survey_and_pcr_s2'=s2_a,'contacts_wide_s2'=N_contacts)
return(out.list)
}
s2_data <- clean_s2_surveys()
s1 <- s1_data$survey_and_pcr_s1 %>%
select(ID, time, Household, lyta, piab,activities, activity_family, activity_friends, activity_community_center, acitivity_fitness,child_contact,child_contact_u12m,child_contact_13_23m,child_contact_24_59m ,child_contact_5_10y,child_contact_over10y , Age, Gender, Race, Ethnicity)
s1_data <- clean_s1_surveys()
ds.c %>%
group_by(season) %>%
summarize(prevalence= mean(piab_pos, na.rm=T), N_pos=sum(piab_pos, na.rm=T), n_test=n())
s1 <- s1_data$survey_and_pcr_s1 %>%
select(ID, time, Household, lyta, piab,activities, activity_family, activity_friends, activity_community_center, acitivity_fitness,child_contact,child_contact_u12m,child_contact_13_23m,child_contact_24_59m ,child_contact_5_10y,child_contact_over10y , Age, Gender, Race, Ethnicity)
s2 <- s2_data$survey_and_pcr_s2  %>%
select(ID, time, Household, lyta, piab,activities, activity_family, activity_friends, activity_community_center, acitivity_fitness,child_contact, child_contact_u12m,child_contact_13_23m,child_contact_24_59m ,child_contact_5_10y,child_contact_over10y, Age, Gender, Race, Ethnicity )
ds.c <- bind_rows(s1, s2) %>%
mutate(season= str_extract(ID, "[^_]+"),
piab_pos=1*(piab<45))
ds.c %>%
group_by(season) %>%
summarize(prevalence= mean(piab_pos, na.rm=T), N_pos=sum(piab_pos, na.rm=T), n_test=n())
ds.c$Gender[ds.c$Gender=='Female'] <- 'F'
ds.c$Gender[ds.c$Gender=='Male'] <- 'M'
table(ds.c$piab_pos, ds.c$Gender)
ds.c %>%
filter(piab_pos==1) %>%
group_by(Gender) %>%
summarize(mean_ct=mean(piab))
piab_men <- ds.c %>%
filter(piab_pos==1 & Gender=='M')
piab_women <- ds.c %>%
filter(piab_pos==1 & Gender=='F')
wilcox.test(piab_women$piab, piab_men$piab, alternative = "two.sided")
ds.c %>%
filter(piab_pos==1) %>%
ggplot( aes(x=Gender,y=piab)) +
geom_violin()+ theme_classic()
ds.c %>%
group_by(season) %>%
filter(child_contact %in% c(0,1)) %>%
summarize(pct_child_contact= mean(child_contact, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_u13_23m= mean(child_contact_13_23m, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_24_5m= mean(child_contact_24_59m, na.rm=T),
pct_child_contact_5_10y= mean(child_contact_5_10y, na.rm=T),
n_test=n())
View(ds.c)
ds.c %>%
group_by(season) %>%
filter(child_contact %in% c(0,1)) %>%
summarize(pct_child_contact= mean(child_contact, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m*(child_contact_u12m!=9999), na.rm=T),
pct_child_contact_u13_23m= mean(child_contact_13_23m*(child_contact_u12m!=9999), na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m*(child_contact_u12m!=9999), na.rm=T),
pct_child_contact_24_5m= mean(child_contact_24_59m*(child_contact_u12m!=9999), na.rm=T),
pct_child_contact_5_10y= mean(child_contact_5_10y*(child_contact_u12m!=9999), na.rm=T),
n_test=n())
ds.c %>%
group_by(season) %>%
filter(child_contact %in% c(0,1)) %>%
mutate(child_contact_u12m = if_else(child_contact_u12m==9999,NA,child_contact_u12m)) %>%
summarize(pct_child_contact= mean(child_contact, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_u13_23m= mean(child_contact_13_23m, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_24_5m= mean(child_contact_24_59m, na.rm=T),
pct_child_contact_5_10y= mean(child_contact_5_10y, na.rm=T),
n_test=n())
ds.c %>%
group_by(season) %>%
filter(child_contact %in% c(0,1)) %>%
mutate(child_contact_u12m = if_else(child_contact_u12m==9999,NA_real_,child_contact_u12m)) %>%
summarize(pct_child_contact= mean(child_contact, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_u13_23m= mean(child_contact_13_23m, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_24_5m= mean(child_contact_24_59m, na.rm=T),
pct_child_contact_5_10y= mean(child_contact_5_10y, na.rm=T),
n_test=n())
ds.c %>%
group_by(season) %>%
filter(child_contact %in% c(0,1)) %>%
mutate(child_contact_u12m = if_else(child_contact_u12m==9999,NA_real_,child_contact_u12m),
pct_child_contact_u13_23m = if_else(pct_child_contact_u13_23m==9999,NA_real_,pct_child_contact_u13_23m),
child_contact_u12m = if_else(child_contact_u12m==9999,NA_real_,child_contact_u12m)
,child_contact_24_59m = if_else(child_contact_24_59m==9999,NA_real_,child_contact_24_59m)
,pct_child_contact_5_10y = if_else(pct_child_contact_5_10y==9999,NA_real_,pct_child_contact_5_10y)) %>%
summarize(pct_child_contact= mean(child_contact, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_u13_23m= mean(child_contact_13_23m, na.rm=T),
pct_child_contact_24_5m= mean(child_contact_24_59m, na.rm=T),
pct_child_contact_5_10y= mean(child_contact_5_10y, na.rm=T),
n_test=n())
ds.c %>%
group_by(season) %>%
filter(child_contact %in% c(0,1)) %>%
mutate(child_contact_u12m = if_else(child_contact_u12m==9999,NA_real_,child_contact_u12m),
child_contact_13_23m = if_else(child_contact_13_23m==9999,NA_real_,child_contact_13_23m),
child_contact_u12m = if_else(child_contact_u12m==9999,NA_real_,child_contact_u12m)
,child_contact_24_59m = if_else(child_contact_24_59m==9999,NA_real_,child_contact_24_59m)
,child_contact_5_10y = if_else(child_contact_5_10y==9999,NA_real_,child_contact_5_10y)) %>%
summarize(pct_child_contact= mean(child_contact, na.rm=T),
pct_child_contact_u12m= mean(child_contact_u12m, na.rm=T),
pct_child_contact_u13_23m= mean(child_contact_13_23m, na.rm=T),
pct_child_contact_24_5m= mean(child_contact_24_59m, na.rm=T),
pct_child_contact_5_10y= mean(child_contact_5_10y, na.rm=T),
n_test=n())
prop.table(table(ds.c$child_contact, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact)
prop.table(table(ds.c$child_contact_u12m, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_u12m)
prop.table(table(ds.c$child_contact_13_23m, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_13_23m)
prop.table(table(ds.c$child_contact_24_59m, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_24_59m)
prop.table(table(ds.c$child_contact_5_10y, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_5_10y)
prop.table(table(ds.c$child_contact_over10y, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_over10y)
mod_s2 <- glm(piab_pos ~ child_contact_u12m + child_contact_13_23m + child_contact_24_59m + child_contact_5_10y + child_contact_over10y , family='binomial', data=ds.c )
summary(mod_s2)
prop.table(table(ds.c$child_contact, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact)
prop.table(table(ds.c$child_contact_u12m, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_u12m)
prop.table(table(ds.c$child_contact_13_23m, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_13_23m)
prop.table(table(ds.c$child_contact_24_59m, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_24_59m)
prop.table(table(ds.c$child_contact_5_10y, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_5_10y)
prop.table(table(ds.c$child_contact_over10y, ds.c$piab_pos), margin=1)
fisher.test(ds.c$piab_pos, ds.c$child_contact_over10y)
mod_s2 <- glm(piab_pos ~ child_contact_u12m + child_contact_13_23m + child_contact_24_59m + child_contact_5_10y + child_contact_over10y , family='binomial', data=ds.c )
summary(mod_s2)
mod.df <- ds.c %>%
filter(child_contact_13_23m!=9999 & !is.na(piab_pos)) %>%
mutate(ID=as.factor(ID))
mod1.gee <- gee(piab_pos ~ child_contact_u12m+ child_contact_13_23m + child_contact_24_59m + child_contact_5_10y + child_contact_over10y,id=mod.df$ID, data=mod.df, family=binomial(link='log'), corstr="exchangeable")
summary(mod1.gee)
coefs <-mod1.gee$coefficients
coef.lcl <- coefs - 1.96 * sqrt(diag(mod1.gee$naive.variance))
coef.ucl <- coefs + 1.96 * sqrt(diag(mod1.gee$naive.variance))
plot(1:5,coefs[-1])
arrows(1:5, y0=coef.lcl[-1], y1=coef.ucl[-1])
abline(h=0)
mod.df <- ds.c %>%
filter(child_contact_13_23m!=9999 & !is.na(piab_pos)) %>%
mutate(ID=as.factor(ID))
mod.df$child_contact_u5 <-
mod.df$child_contact_u12m + mod.df$child_contact_13_23m + mod.df$child_contact_24_59m
#N contacts
mod.df$child_contact_1_5 <- mod.df$child_contact_13_23m + mod.df$child_contact_24_59m
l1 <- mod.df
l1$day <- 0
l1$day[l1$time==2] <- 14
l1$day[l1$time==3] <- 14*2
l1$day[l1$time==4] <- 14*3
l1$day[l1$time==5] <- 14*4
l1$day[l1$time==6] <- 14*5
l1$state <- NA
l1$state[l1$piab_pos==0 & !is.na(l1$piab_pos)] <- 1
l1$state[l1$piab_pos==1 & !is.na(l1$piab_pos)] <- 2
#l1$state <- as.factor(l1$state)
q1 <- rbind(c( 0,0.01),
c(0.01,0)
)
l1 <- l1[order(l1$ID, l1$day),]
l2 <- l1[, c('state','child_contact_u5','child_contact_1_5','child_contact','child_contact_u12m','child_contact_13_23m',"child_contact_24_59m","child_contact_5_10y",'child_contact_over10y', 'ID','day')]
msm.mod1 <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2)
msm.mod1
msm.mod1a <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_u12m))
msm.mod1a
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_1_5))
msm.mod1b
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_u5))
msm.mod1b
msm.mod1b
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_u5))
msm.mod1b
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_1_5))
msm.mod1b
msm.mod1a <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_u12m))
msm.mod1a
msm.mod1b <- msm( state~ day ,  subject=ID , qmatrix=q1 , data=l2,covariates = list("1-2" = ~ child_contact_1_5))
msm.mod1b
>>>>>>> season2
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplot2)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
<<<<<<< HEAD
key1 <- read.csv('./Data/hh_id_key.csv')
master1 <- read_excel('./Data/confidential/SCOPE_Master_20210108.xlsx', sheet='COM SAL')
key2 <- read_excel('./Data/confidential/SCOPE Participant MRN and ID.xlsx', skip=1)
key3 <- cbind.data.frame('id'=c(100:101) , 'Household'=c(51,51) )
key1 <- bind_rows(key1,key3)
file_list <- list.files(path="./Data/Final Scope Results Drift Correction")
all.res <-
lapply(file_list, function(x){
print(x)
ds <- read_excel(paste0("./Data/Final Scope Results Drift Correction/",x), skip=19)
ds$expt <- substr(x,1,4)
ds$Sample <- as.character(ds$Sample)
ds$Target <- as.character(ds$Target)
ds$Cq <- as.numeric(as.character(ds$Cq))
cols.keep <-
c('Cq','Sample','Target','Content','expt','Biological Set Name')
ds.names <- names(ds)
ds.names <- intersect(ds.names,cols.keep)
ds <- ds[,ds.names]
return(ds)
})
all.res <- lapply(1:length(all.res), function(x){ all.res[[x]]$plate= x
return(all.res[[x]])
})
test1 <- lapply(all.res, function(x)  is.character(x$Target))
b1 <- bind_rows(all.res)
b1$Cq[is.na(b1$Cq)] <- 45
b1$Target[is.na(b1$Target)] <-
b1$`Biological Set Name`[is.na(b1$Target)]
b1 <- b1[b1$Content!='Std',]
b1$Target <- gsub(' ' ,'', b1$Target, fixed=T)
b1$Target <- tolower(b1$Target)
b1$Target[grep('lyta',b1$Target)] <- 'lyta'
b1$Target[grep('piab',b1$Target)] <- 'piab'
#b1$Sample[is.na(b1$Sample)] <- b1$`sample id`[is.na(b1$Sample)]
b1 <-b1[!is.na(b1$Sample),]
b1$Sample <- round(as.numeric(b1$Sample),1)
b1 <- b1[b1$Sample>0 & !is.na(b1$Sample),]
c1 <- b1[, c('Sample','Cq','Target','plate')]
c1$Cq[is.na(c1$Cq)] <- 45
c1.m <- reshape2::melt(c1, id.vars= c('Sample','Target','plate'))
##If sample tested multiple times call pos if pos on multiple runs. Ct<40=pos
c1.m <- c1.m %>%
group_by(Sample, Target) %>%
mutate(N_tests= n(), n_pos=sum(value<40), ct_pos=mean(value[value<40], na.rm=T), ct_min=min(value, na.rm=T) ) %>%
ungroup()
#if negative, set ct to 45
c1.m$ct_pos[is.nan(c1.m$ct_pos)] <- 45
c1.m$ct_pos2 <- c1.m$ct_pos
#If min Ct value<35, use ave value of positive regardless of number of tests performed.
c1.m$ct_pos2[c1.m$ct_min <= 35] <- c1.m$ct_pos[c1.m$ct_min <= 35] #if ave is <35, call positive regardless of N tests
#If min Ct>35, and 3 or more tests performed, with only 1 positive, call it a negative
c1.m$ct_pos2[c1.m$N_tests>=3 & c1.m$n_pos<=1 & c1.m$ct_min > 35] <- 45 #if 3 or more tests, and 0 or 1 are weakly positive or neg, then call it negative
#If min >35, with at least 2 tests performed and at least 2 were positive, call it positive
c1.m$ct_pos2[c1.m$N_tests>=2 & c1.m$n_pos>= 2 & c1.m$ct_min > 35] <-
c1.m$ct_pos[c1.m$N_tests>=2 & c1.m$n_pos>= 2 & c1.m$ct_min > 35] #if 3 or more tests, and 0 or 1 are weakly positive or neg, then call it negative
#if min Ct>35, N tests is <=2 and only 1 positive, call it negative
c1.m$ct_pos2[c1.m$N_tests<=2 & c1.m$n_pos<=1 & c1.m$ct_min > 35] <- c1.m$ct_pos2[c1.m$N_tests<=2 & c1.m$n_pos<=1 & c1.m$ct_min > 35] #if 2 or fewer tests, and at least 1 is positive, call positive
c1.c <- reshape2::dcast(c1.m[,c('Sample','variable','Target','ct_pos2')], Sample +variable ~ Target, fun.aggregate = min, fill=9999, value.var='ct_pos2')
c1.c$pos <- c1.c$lyta<40 & c1.c$piab<40
write.csv(c1.c, './Data/cleaned_file.csv')
plot(c1.c$lyta, c1.c$piab, xlim= c(45,0), ylim=c(45,0), xlab='lytA', ylab='piaB', bty='l')
abline(a=0, b=1)
abline(h=40, v=40, col='gray', lty=2)
c1.m$ID <- sub("\\.[0-9]+$", "", c1.m$Sample)
c1.m$ID <- as.numeric(as.character(c1.m$ID))
c1.m$time <- sub('.*\\.', '', c1.m$Sample)
c1.m <- c1.m[order(c1.m$ID, c1.m$time),]
c1.m <- merge(c1.m, key1, by.x='ID',by.y='id', all.x=T)
c1.m <- c1.m[!(c1.m$ID %in% c(38,39, 48,49, 58, 59)),]
d1 <- dcast(c1.m[,c('ID','Target','time','ct_pos2')],  ID +Target ~ time, fun.aggregate = min, na.rm=T, fill=9999, value.var = 'ct_pos2')
write.csv(d1, './Data/Result1.csv')
d1.alt <- dcast(c1.m[,c('ID','Target','time','ct_pos2')],  ID +time~ Target, fun.aggregate = min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.alt <- d1.alt[!(d1.alt$ID %in% c(38,39, 48, 49)),] #these IDs were not included in study
write.csv(d1.alt, './Data/Result2.csv') #Anne's preferred format
c1.m <- c1.m[!(c1.m$ID %in% c(38,39)),] #these IDs were not included in study
d1.a <- acast(c1.m[,c('ID','Target','time','ct_pos2','Household')], Target ~ ID +Household ~ time, fun.aggregate=min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.ds <- reshape2::dcast(c1.m[,c('ID','Target','time','ct_pos2','Household')],   Household +ID+ time ~ Target, fun.aggregate=min, na.rm=T, fill=9999, value.var = 'ct_pos2')
piab.plot <- heat.fun(target='piab')
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
key1 <- read.csv('./Data/hh_id_key.csv')
master1 <- read_excel('./Data/confidential/SCOPE_Master_20210108.xlsx', sheet='COM SAL')
key2 <- read_excel('./Data/confidential/SCOPE Participant MRN and ID.xlsx', skip=1)
key3 <- cbind.data.frame('id'=c(100:101) , 'Household'=c(51,51) )
key1 <- bind_rows(key1,key3)
file_list <- list.files(path="./Data/Final Scope Results Drift Correction")
all.res <-
lapply(file_list, function(x){
print(x)
ds <- read_excel(paste0("./Data/Final Scope Results Drift Correction/",x), skip=19)
ds$expt <- substr(x,1,4)
ds$Sample <- as.character(ds$Sample)
ds$Target <- as.character(ds$Target)
ds$Cq <- as.numeric(as.character(ds$Cq))
cols.keep <-
c('Cq','Sample','Target','Content','expt','Biological Set Name')
ds.names <- names(ds)
ds.names <- intersect(ds.names,cols.keep)
ds <- ds[,ds.names]
return(ds)
})
all.res <- lapply(1:length(all.res), function(x){ all.res[[x]]$plate= x
return(all.res[[x]])
})
test1 <- lapply(all.res, function(x)  is.character(x$Target))
b1 <- bind_rows(all.res)
b1$Cq[is.na(b1$Cq)] <- 45
b1$Target[is.na(b1$Target)] <-
b1$`Biological Set Name`[is.na(b1$Target)]
b1 <- b1[b1$Content!='Std',]
b1$Target <- gsub(' ' ,'', b1$Target, fixed=T)
b1$Target <- tolower(b1$Target)
b1$Target[grep('lyta',b1$Target)] <- 'lyta'
b1$Target[grep('piab',b1$Target)] <- 'piab'
#b1$Sample[is.na(b1$Sample)] <- b1$`sample id`[is.na(b1$Sample)]
b1 <-b1[!is.na(b1$Sample),]
b1$Sample <- round(as.numeric(b1$Sample),1)
b1 <- b1[b1$Sample>0 & !is.na(b1$Sample),]
c1 <- b1[, c('Sample','Cq','Target','plate')]
c1$Cq[is.na(c1$Cq)] <- 45
c1.m <- reshape2::melt(c1, id.vars= c('Sample','Target','plate'))
##If sample tested multiple times call pos if pos on multiple runs. Ct<40=pos
c1.m <- c1.m %>%
group_by(Sample, Target) %>%
mutate(N_tests= n(), n_pos=sum(value<40), ct_pos=mean(value[value<40], na.rm=T), ct_min=min(value, na.rm=T) ) %>%
ungroup()
#if negative, set ct to 45
c1.m$ct_pos[is.nan(c1.m$ct_pos)] <- 45
c1.m$ct_pos2 <- c1.m$ct_pos
#If min Ct value<35, use ave value of positive regardless of number of tests performed.
c1.m$ct_pos2[c1.m$ct_min <= 35] <- c1.m$ct_pos[c1.m$ct_min <= 35] #if ave is <35, call positive regardless of N tests
#If min Ct>35, and 3 or more tests performed, with only 1 positive, call it a negative
c1.m$ct_pos2[c1.m$N_tests>=3 & c1.m$n_pos<=1 & c1.m$ct_min > 35] <- 45 #if 3 or more tests, and 0 or 1 are weakly positive or neg, then call it negative
#If min >35, with at least 2 tests performed and at least 2 were positive, call it positive
c1.m$ct_pos2[c1.m$N_tests>=2 & c1.m$n_pos>= 2 & c1.m$ct_min > 35] <-
c1.m$ct_pos[c1.m$N_tests>=2 & c1.m$n_pos>= 2 & c1.m$ct_min > 35] #if 3 or more tests, and 0 or 1 are weakly positive or neg, then call it negative
#if min Ct>35, N tests is <=2 and only 1 positive, call it negative
c1.m$ct_pos2[c1.m$N_tests<=2 & c1.m$n_pos<=1 & c1.m$ct_min > 35] <- c1.m$ct_pos2[c1.m$N_tests<=2 & c1.m$n_pos<=1 & c1.m$ct_min > 35] #if 2 or fewer tests, and at least 1 is positive, call positive
c1.c <- reshape2::dcast(c1.m[,c('Sample','variable','Target','ct_pos2')], Sample +variable ~ Target, fun.aggregate = min, fill=9999, value.var='ct_pos2')
c1.c$pos <- c1.c$lyta<40 & c1.c$piab<40
write.csv(c1.c, './Data/cleaned_file.csv')
plot(c1.c$lyta, c1.c$piab, xlim= c(45,0), ylim=c(45,0), xlab='lytA', ylab='piaB', bty='l')
abline(a=0, b=1)
abline(h=40, v=40, col='gray', lty=2)
c1.m$ID <- sub("\\.[0-9]+$", "", c1.m$Sample)
c1.m$ID <- as.numeric(as.character(c1.m$ID))
c1.m$time <- sub('.*\\.', '', c1.m$Sample)
c1.m <- c1.m[order(c1.m$ID, c1.m$time),]
c1.m <- merge(c1.m, key1, by.x='ID',by.y='id', all.x=T)
c1.m <- c1.m[!(c1.m$ID %in% c(38,39, 48,49, 58, 59)),]
d1 <- dcast(c1.m[,c('ID','Target','time','ct_pos2')],  ID +Target ~ time, fun.aggregate = min, na.rm=T, fill=9999, value.var = 'ct_pos2')
write.csv(d1, './Data/Result1.csv')
d1.alt <- dcast(c1.m[,c('ID','Target','time','ct_pos2')],  ID +time~ Target, fun.aggregate = min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.alt <- d1.alt[!(d1.alt$ID %in% c(38,39, 48, 49)),] #these IDs were not included in study
write.csv(d1.alt, './Data/Result2.csv') #Anne's preferred format
c1.m <- c1.m[!(c1.m$ID %in% c(38,39)),] #these IDs were not included in study
d1.a <- acast(c1.m[,c('ID','Target','time','ct_pos2','Household')], Target ~ ID +Household ~ time, fun.aggregate=min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.ds <- reshape2::dcast(c1.m[,c('ID','Target','time','ct_pos2','Household')],   Household +ID+ time ~ Target, fun.aggregate=min, na.rm=T, fill=9999, value.var = 'ct_pos2')
piab.plot <- heat.fun(target='piab')
lyta.plot <- heat.fun(target='lyta')
c1.m.m <- melt(c1.m[,c('Target','ID','Sample','ct_pos2','Household') ],
id.vars=c('Target','ID','Sample','Household'))
c1.m.c <- dcast(c1.m.m, ID + Household + Sample  ~Target, fun.aggregate = min, fill=999)
#N people
N.id <- length(unique(c1.m.c$ID))
N.id
#N households
N.hh<- length(unique(c1.m.c$Household))
N.hh
#N samples
nrow(c1.m.c)
#length(unique(c1.m.c$Sample[c1.m$Target=='piab']))
#length(unique(c1.m.c$Sample[c1.m$Target=='lyta']))
#N positive
sum(c1.m.c$piab<40 )
sum(c1.m.c$piab<40  &c1.m.c$lyta>=40)
sum(c1.m.c$piab<40  &c1.m.c$lyta<40)
#% positive
sum(c1.m.c$piab<40 )/nrow(c1.m.c)
#N positive lytA
sum(c1.m.c$lyta<40 )
sum(c1.m.c$lyta<40 )/nrow(c1.m.c)
#Count N people with piaB positives by IDs
c1.m.spl.id <- split(c1.m.c, c1.m.c$ID)
N_pos_people <- sum(sapply(c1.m.spl.id, function(x){
min(x$piab) <40
}
))
N_pos_people
N_pos_people/N.id
#Count N HH with piab positives by IDs
c1.m.spl.id <- split(c1.m.c, c1.m.c$Household)
n_pos_hh <- sum(sapply(c1.m.spl.id, function(x){
min(x$piab) <40
}
))
n_pos_hh/N.hh
## Ave age
age1 <- read_excel('./Data/confidential/AGE Scope Participants samples pick-up 06-15-2021.xlsx', skip=1)
names(age1)[1] <- 'ID'
age1 <- age1[ which(age1$ID %in% unique(c1.m.c$ID)),]
mean(age1$AGE)
range(age1$AGE)
q0a <-  read_excel('./Data/confidential/SCOPE Intake questionnaire_September 24, 2021_11.57.xlsx', skip=1)
q0a$`Date of Visit` <- parse_date_time(q0a$`Date of Visit`, orders=c('d-b-Y','d/b/Y','d-m-Y','m/d/Y','m/d/y','Y-m-d'))
q0b <- read_excel('./Data/confidential/SCOPE Intake questionnaire_January 18, 2022_09.50.xlsx', skip=1)
names(q0b) <- names(q0a)
q0b$`Date of Visit` <- parse_date_time(q0b$`Date of Visit`, orders=c('d-b-Y','d/b/Y','d-m-Y','m/d/Y','m/d/y','Y-m-d'))
q0c <- read_excel('./Data/confidential/SCOPE Intake questionnaire_December 7, 2021_13.05.xlsx', skip=1)
names(q0c) <- names(q0a)
q0c$`Date of Visit` <- parse_date_time(q0c$`Date of Visit`, orders=c('d-b-Y','d/b/Y','d-m-Y','m/d/Y','m/d/y','Y-m-d'))
q0 <- bind_rows(q0a, q0b, q0c)
select.colnames <- c('MRN',
"SCOPE ID (eg. 0007, 0044, 0072 etc) if known/listed",
"Date of Visit","Visit Location - Selected Choice",
"What is your date of birth? (DD-MM-YYYY)",
"1.     Are you experiencing any of the following symptoms today?   - Q8#1 - Nasal congestion",
"1.     Are you experiencing any of the following symptoms today?   - Q8#1 - Coughing",
"1.     Are you experiencing any of the following symptoms today?   - Q8#1 - Running nose",
"1.     Are you experiencing any of the following symptoms today?   - Q8#1 - Sore throat",
"1.     Are you experiencing any of the following symptoms today?   - Q8#1 - Fever",
"1.    \nHave you had a positive test for COVID?",
"If\nyes, when did you have this positive test? (DD-MM-YYYY)",
"Have\nyou received the pneumonia vaccine?"  ,
"If yes,\nwhen did you receive this vaccine? (DD-MM-YYYY)",
"Have\nyou been hospitalized for pneumonia in the last month (30 days)?" ,
"Have\nyou taken any antibiotics in the last month (30 days)?",
"Weight",
"Height (feet, inches)","
Gender - Selected Choice","What is your highest level of education?",
"How would you describe your ethnicity? - Selected Choice"  ,
"What is the relationship between yourself and the person you are enrolling into the study with?",
"How long have you been living together? - Years" ,
"How much time do you spend together each day? - ___ hours",
"Have you received the flu shot this season?",
"Have you had any of the following symptoms in the past 2 weeks? - Q39#1 - Nasal congestion" ,
"Have you had any of the following symptoms in the past 2 weeks? - Q39#1 - Coughing",
"Have you had any of the following symptoms in the past 2 weeks? - Q39#1 - Running nose",
"Have you had any of the following symptoms in the past 2 weeks? - Q39#1 - Sore throat" ,
"Have you had any of the following symptoms in the past 2 weeks? - Q39#1 - Fever",
"Have you taken any medications for or been told by a health care provider that you have any of th... - Q40#1 - 1.\tImmunodeficiency (Examples include: HIV/AIDS, corticosteroid medication like “Prednisone”, medicine or therapy to treat a cancerous tumor or mass, have had your spleen removed or have chronic kidney disease)",
"Have you taken any medications for or been told by a health care provider that you have any of th... - Q40#1 - 2.\tDiabetes",
"Have you taken any medications for or been told by a health care provider that you have any of th... - Q40#1 - 5c. Chronic lung disease: Asthma",
"Do you currently smoke cigarettes or e-cigarrettes?",
"Do you have any regular contact with children?",
"What is the age range of the children you have had contact with? - Selected Choice" ,
"How often do you usually have contact with children?" ,
"How much contact per day do you have?",
"Time of sample collection:"
)
q0 <- q0[,c(which(names(q0) %in% select.colnames),grep('Are you experiencing any of the following symptoms today', names(q0)) )]
#q0b <- q0b[,c(which(names(q0b) %in% select.colnames),grep('Are you experiencing any of the following symptoms today', names(q0b)) )]
rename.intake <- c('MRN','scope_id', 'visit_date','visit_location', 'dob','pos_covid_past', 'pos_covid_date', 'pneu_vax', 'pneu_vax_date','pneumonia_hosp', 'recent_abx', 'weight','height','education','ethnicity', 'hh_relationship', 'relationship_duration','hh_contact_time','flu_shot', 'recent_nasal', 'recent_cough', 'recent_runny_nose', 'recent_sore_throat', 'recent_fever','immuno_meds','diabetes_meds','asthma_meds', 'current_smoke', 'contact_children','age_child_contacts', 'frequency_child_contacts', 'time_day_child_contacts', 'time_sample', 'current_nasal','current_cough', 'current_runny_nose', 'current_sore_throat','current_fever', 'other_symp1','othr_symp2')
names(q0) <- rename.intake
q0$visit_date[q0$visit_date %in% c( '12/APR/2021','12 Apr 2021','12/14/2021')] <- '2021-04-12'
q0$visit_date_clean <- parse_date_time(q0$visit_date, orders=c('d-b-Y','d/b/Y','d-m-Y','m/d/Y','m/d/y','Y-m-d'))
q0$visitN <- '1'
q0$MRN <- as.numeric(gsub('MR','',q0$MRN))
q0.baseline.vars <- c('dob','scope_id',"pos_covid_past","pos_covid_date","pneu_vax", "pneu_vax_date",'ethnicity','weight','height','education', "immuno_meds" ,"diabetes_meds", "asthma_meds","flu_shot","hh_relationship", "relationship_duration")
q1 <- read_excel('./Data/confidential/SCOPE Fortnightly Questionnaire_September 24, 2021_12.00_clean.xlsx', skip=1)
orig.colnames <- names(q1)
select.colnames.q1 <- c('MRN', "Fortnightly visit number:", "SCOPE ID if known/listed (eg. 0002, 0027, 0044, 0072...)", "Date of Visit", "Visit Location - Selected Choice","Have you taken part in any social activities or outings during the past two weeks?", "What sorts of activities have you participated in? - Selected Choice" , "Have you had any contact with children in the past two weeks?" , "If yes, what is the age range of the children you have had contact with? - Selected Choice","How often do you usually have contact with children?" , "How much contact per day do you have?", "Have you been tested for COVID in the last two weeks?" , "Have you had any sick visits to the doctor or been hospitalized in the last two weeks?" , "Have you received any new vaccines in the last two weeks? - Selected Choice"   ,"Time of sample collection:" ,'Have you taken any antibiotics in the last two weeks?' )
rename.q1 <-c('MRN','scope_id', 'visit_date', 'visitN', 'visit_location','recent_social_activities','social_activity_type', 'contact_children','age_child_contacts', 'frequency_child_contacts', 'time_day_child_contacts','recent_covid_test', 'recent_doctor','recent_abx', 'recent_vaccines', 'sample_time', 'current_nasal','current_cough', 'current_runny_nose', 'current_sore_throat','current_fever', 'other_symp1','othr_symp2','recent_nasal', 'recent_cough', 'recent_runny_nose', 'recent_sore_throat', 'recent_fever' , 'recent_other_symp1','recent_other_symp2')
q1b1 <- read_excel('./data/confidential/SCOPE Fortnightly Questionnaire_December 7, 2021_13.03.xlsx', skip=1)
names(q1b1) <- orig.colnames
q1b2 <- read_excel('./data/confidential/SCOPE Fortnightly Questionnaire_December 11, 2021_13.30.xlsx', skip=1)
names(q1b2) <- orig.colnames
q1b2$`Date of Visit` <- as.Date(q1b2$`Date of Visit`, '%m/%d/%Y')
q1b3 <- read_excel('./data/confidential/SCOPE Fortnightly Questionnaire_January 18, 2022_09.02.xlsx', skip=1)
names(q1b3) <- orig.colnames
q1b3$`Date of Visit` <- as.Date(q1b3$`Date of Visit`, '%m/%d/%Y')
q1b <- bind_rows(q1b1, q1b2,q1b3)
q1b <- q1b[,c(which(names(q1b) %in% select.colnames.q1),grep('Which symptoms are you experiencing today', names(q1b)),grep('Have you had any of the following symptoms', names(q1b))  )]
names(q1b) <- rename.q1
q1b$MRN <- as.numeric(q1b$MRN)
q1b$visitN <- as.numeric(q1b$visitN)
#q1b <- unique(q1b) #de-deuplicate
q1b <- q1b %>%
group_by(MRN, visitN) %>%
mutate(repN=row_number()) %>%
ungroup()
q1b <- q1b[q1b$repN==1,]
q2 <- read_excel('./data/confidential/survey_data_to_clean_DMW.xlsx')
q2$visit_date <- as.Date(as.numeric(q2$visit_date), origin='1900-01-01')
q2$visit_date_cleaned <- as.Date(as.numeric(q2$visit_date_cleaned), origin='1900-01-01')
q2$visit_date <- q2$visit_date_cleaned
q0$visitN <- as.numeric(q0$visitN)
q0$MRN <- as.numeric(q0$MRN)
q2 <- bind_rows(q2, q0[,-which(names(q0) %in% q0.baseline.vars)])
q2 <- bind_rows(q2, q1b)
q2$MRN[q2$MRN==17330176] <- 1733076 #fix typo
q2$MRN[q2$MRN==1156975 ] <- 1156974 #fix typo
q2$MRN[is.na(q2$MRN) & q2$visit_date_cleaned=='2021-03-17'] <- 4149574
q2$visit_date_cleaned <- q2$visit_date
q2$MRN_cleaned[is.na(q2$MRN_cleaned)] <-
q2$MRN[is.na(q2$MRN_cleaned)]
##Summary of which people are missing which days
q2.m <- reshape2::melt(q2[, c('MRN_cleaned','visitN') ], id.vars=c('MRN_cleaned','visitN'))
q2.c <- reshape2::dcast(q2.m, MRN_cleaned ~visitN, fun.aggregate = length)
write.csv(q2.c,'./Data/confidential/MRN_surveys_missing.csv')
q2 <- q2[,-which(names(q2) %in% q0.baseline.vars)] #baseline vars are messed up in merge
q0$MRN <-  gsub("_visit#2.pdf","", q0$MRN )
q0$MRN <-  gsub("MR","", q0$MRN )
q0$MRN <-  gsub("mr","", q0$MRN )
q0$MRN <-  as.numeric(q0$MRN)
q2$MRN <-  gsub("MR","", q2$MRN )
merge_key <- unique(q2[, c('MRN',  "MRN_cleaned" )])
q0a <- merge(q0, merge_key, by='MRN', all=T)
q3 <- merge(q2, q0a[,which(names(q0a) %in% c('MRN_cleaned',q0.baseline.vars))], by= "MRN_cleaned", all.x=T)
q3 <- q3[q3$visitN %in% c(1,2,3,4,5,6),]
q3$visit_date_cleaned <- as.Date(q3$visit_date_cleaned)
q3$dob_clean <-  parse_date_time(q3$dob, orders=c('%m/%d/%Y', '%m/%d/%y', '%d/%m/%y','%d/%m/%y','%m-%d-%Y','%d-%m-%Y'))
q3$dob_clean[q3$dob=='1945'] <- as.Date('1945-01-01')
q3$dob_clean[q3$dob=='/1947'] <- as.Date('1947-01-01')
q3$dob_clean <- as.Date(q3$dob_clean)
q3$dob_clean <- q3$dob_clean - 100*365*(q3$dob_clean>=as.Date('2000-01-01')) #if DOB >year 2000, indicates problem with date
q3$age <- round(as.numeric(q3$visit_date_cleaned - as.Date(q3$dob_clean))/365) #only recorded at t=1
#View(q2[, c('visitN','dob_clean',"MRN..Clean.",'Visit_date..Clean.') ])
key2$mr_clean <- gsub('MR', '',key2$`MR#`,)
#This is tricky..on key 2 is minimally cleaned; should match with uncleaned MRN on q3
q4 <- merge(q3, key2, by.x="MRN_cleaned", by.y= "mr_clean" , all.x=T)
q4$flag_id <- is.na(q4$`ID Number`)
age1 <- read_excel('./Data/confidential/AGE Scope Participants samples pick-up 06-15-2021.xlsx', skip=1)
age1$MRN_cleaned <- gsub( 'MR', '',age1$`MR#`)
age1 <- age1[,c('MRN_cleaned', 'AGE' )]
age1$MRN_cleaned <- as.numeric(age1$MRN_cleaned)
q4 <- merge(q4, age1, by='MRN_cleaned', all.x=T)
##Flag duplicate survey entries
q4 <- q4 %>%
group_by(MRN_cleaned, visitN) %>%
mutate(repN = row_number())
q4 <- q4[q4$repN==1,]
q4 <- q4[!(q4$`ID Number`  %in% c(38,39, 48,49, 58, 59, 102, 103)),]
q4 <- q4[!(q4$`ID Number`==6 & q4$visitN==1),]
#View(q2[is.na(q2$age),])
#miss.dob <- q0a[q0a$dob %in% c('N/A',"19-04-2021") | is.na(q0$dob), c('dob','MRN_cleaned','MRN') ]
#write.csv(miss.dob,'./Data/confidential/check_dob.csv')
##Summary of which people are missing which days
q4.1 <- q4
q4.1$child_contact_2_10y <- 0
q4.1$child_contact_2_10y[grep('24-59 months', q4.1$age_child_contacts)] <- 1
q4.1$child_contact_2_10y[grep('5-10 years', q4.1$age_child_contacts)] <- 1
#q4.1$child_contact_2_10y[grep('13-23 months', q4.1$age_child_contacts)] <- 1
#q4.1$child_contact_2_10y[grep('<12 months', q4.1$age_child_contacts)] <- 1
q4.1$child_contact_2_10y[is.na(q4.1$age_child_contacts)] <- NA
q4.m <- reshape2::melt(q4.1[, c('ID Number','visitN','child_contact_2_10y') ], id.vars=c('ID Number','visitN'))
q2.c <- reshape2::dcast(q4.m, `ID Number` ~visitN, fun.aggregate = mean, fill=9999)
names(q2.c)[1] <- 'ID'
q2.c <- q2.c[!(q2.c$ID %in% c(38,39)),] #these IDs were not included in study
q3.c <- merge(q2.c, key1, by.x='ID',by.y='id')
heat.fun.contact()
=======
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr()
View(clean_pcr$clean_pcr)
clean_pcr <- clean_pcr()
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplot2)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplot2)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr_fun()
plot(clean_pcr$pcr_summary_long$lyta, clean_pcr$pcr_summary_long$piab, xlim= c(45,0), ylim=c(45,0), xlab='lytA', ylab='piaB', bty='l')
abline(a=0, b=1)
abline(h=40, v=40, col='gray', lty=2)
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
>>>>>>> season2
