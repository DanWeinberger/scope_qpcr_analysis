## UPDATE RESULTS BASED ON AUDIT BY ANNE WYLLIE (OCT 31, 2023):
##These are adjudicated after restesting with higher volume extraction from sample.
#The sheet includes piaB positive samples
s1_audit <- read_excel('./Data/Anne_adjudicated_files/season1.xlsx')
s2_audit <- read_excel('./Data/Anne_adjudicated_files/season2.xlsx')
combine_audit_pos <- bind_rows(s1_audit, s2_audit) %>%
rename(time=week,
lyta_valid=lytA_ct,
piab_valid=piab_ct  ) %>%
mutate(ID=paste0('S',season,'_', participant)) %>%
dplyr::select(time, ID, lyta_valid, piab_valid,serotype,serotype_ct )
d1.ds.b <- d1.ds.a %>%
full_join(combine_audit_pos, by=c('ID','time')) %>%
mutate(lyta_valid = if_else(is.na(lyta_valid),lyta, lyta_valid), # if lytA is missing, might just be piab pos and not on sheet
piab_valid = if_else(is.na(piab_valid),45, piab_valid),
)
d1.ds.b %>%
filter(piab<=45) %>%
ggplot(aes(x=piab, y=piab_valid)) +
geom_point() +
geom_hline(yintercept=35) +
geom_vline(xintercept=35) +
theme_classic()
d1.ds.b %>%
filter(lyta<=45) %>%
ggplot(aes(x=lyta, y=lyta_valid)) +
geom_point() +
geom_hline(yintercept=35) +
geom_vline(xintercept=35) +
theme_classic()
d1.ds <- d1.ds.b %>%
mutate( lyta = lyta_valid,
piab=piab_valid) %>%
dplyr::select(Household, ID, time, lyta, piab, serotype,serotype_ct,HH_order)
# d1.ds <- d1.ds %>%
#   mutate(  piab = if_else(ID=='S2_2' & time==6, 38.34,
#                   if_else(ID=='S2_24' & time==2, 38.62,
#                   if_else(ID=='S2_25' & time==1, 32.46,
#                   if_else(ID=='S2_25' & time==2, 30.21,
#                   if_else(ID=='S2_25' & time==3, 31,
#                   if_else(ID=='S2_25' & time==4, 31.32,
#                   if_else(ID=='S2_25' & time==6, 32.45,
#                   if_else(ID=='S2_27' & time==2, 36.37,
#                   if_else(ID=='S2_28' & time==1, 28.18,
#                   if_else(ID=='S2_28' & time==2, 35.92,
#                   if_else(ID=='S2_28' & time==5, 32.09,
#                   if_else(ID=='S2_35' & time==5, 30.77,
#                   if_else(ID=='S2_35' & time==6, 31.91,
#                   if_else(ID=='S2_36' & time==5, 37.23,
#                   if_else(ID=='S2_40' & time==6, 38.58,
#                   if_else(ID=='S2_41' & time==6, 36.07,
#                   if_else(ID=='S2_48' & time==6, 38.6,
#                   if_else(ID=='S2_49' & time==5, 38.27,
#                   if_else(ID=='S2_50' & time==5, 38.9,
#                   if_else(ID=='S2_61' & time==3, 38.8,
#                   if_else(ID=='S2_70' & time==3, 23.09,
#                   if_else(ID=='S2_89' & time==2, 45 ,
#                           piab
#                                   )))))))))))))))))))))),
#                   lyta = if_else(ID=='S2_2' & time==6, 38.28,
#                   if_else(ID=='S2_24' & time==2, 45,
#                   if_else(ID=='S2_25' & time==1, 30.26,
#                   if_else(ID=='S2_25' & time==2, 29.3,
#                   if_else(ID=='S2_25' & time==3, 29.26,
#                   if_else(ID=='S2_25' & time==4, 29.98,
#                   if_else(ID=='S2_25' & time==6, 30.01,
#                   if_else(ID=='S2_27' & time==2, 36.53,
#                   if_else(ID=='S2_28' & time==1, 27.55,
#                   if_else(ID=='S2_28' & time==2, 34.63,
#                   if_else(ID=='S2_28' & time==5, 31.03,
#                   if_else(ID=='S2_35' & time==5, 28.45,
#                   if_else(ID=='S2_35' & time==6, 29.36,
#                   if_else(ID=='S2_36' & time==5, 45,
#                   if_else(ID=='S2_40' & time==6, 25.08,
#                   if_else(ID=='S2_41' & time==6, 36.15,
#                   if_else(ID=='S2_48' & time==6, 45,
#                   if_else(ID=='S2_49' & time==5, 37.33,
#                   if_else(ID=='S2_50' & time==5, 45,
#                   if_else(ID=='S2_61' & time==3, 37.33,
#                   if_else(ID=='S2_70' & time==3, 22.22,
#                   if_else(ID=='S2_89' & time==2,  45,
#                           lyta
#                                   )))))))))))))))))))))),
#
#            )
saveRDS(d1.ds, './data/PCR_compiled.rds')
out.list <- list('clean_pcr'=d1.ds,  'pcr_summary'=c1.m, 'pcr_summary_long'=c1.c)
}
clean_pcr <- clean_pcr_fun()
#ds1 <- data.array[target,,]
ds1 <- clean_pcr$clean_pcr %>%
mutate( lyta= if_else( lyta==9999,NA_real_, lyta),
piab= if_else( piab==9999,NA_real_, piab),
season = substr(ID,1,2),
seasonid =as.numeric(substring(ID, 4)),
seasonhh= as.numeric(substring(Household, 4)),
st=as.factor(serotype)
) %>%
filter(ID !='S2_NA') %>%
arrange(season, seasonid) %>%
group_by(season, seasonid, seasonhh) %>%
mutate(sampleID=cur_group_id()) %>%
ungroup() %>%
group_by(season,seasonhh) %>%
mutate(house=cur_group_id()) %>%
ungroup() %>%
arrange(season,seasonhh, seasonid)
View(ds1)
cut1=15
cut2=45
cut3 = 47
cut4=95
cut5=141
target='serotype'
ds.plot <- dcast(ds1, house+ season +sampleID+ seasonid + seasonhh +HH_order~time, value.var = target)
ds.plot <- ds.plot %>%
filter(!is.na(sampleID)) %>%
arrange(season,seasonhh,seasonid ) %>%
group_by(season,seasonhh) %>%
mutate(HH_order=row_number()) %>%
ungroup()
ds.plot$labels <- paste(ds.plot$season, ds.plot$seasonid, sep='_')
write.csv(ds.plot,'./Data/heat.table.csv')
sub1 <- ds.plot[1:cut3,]
gap1 <- which(sub1$HH_order==1) +1
gap1 <- gap1[-length(gap1)]
#First half
heat1 <- (pheatmap(sub1[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap1,
labels_row = sub1$labels,
cellwidth = 9,
cellheight = 9,
color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks))
heat1
#First half
heat1 <- (pheatmap(sub1[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap1,
labels_row = sub1$labels,
cellwidth = 9,
cellheight = 9,
#color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks))
breakslist<-seq(cut1,cut2,by=1)
#First half
heat1 <- (pheatmap(sub1[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap1,
labels_row = sub1$labels,
cellwidth = 9,
cellheight = 9,
#color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
breaks=breakslist,
legend=F,
labels_col = weeks))
breakslist
#First half
heat1 <- (pheatmap(sub1[,c('1','2','3','4','5','6')],
cluster_cols = F,
cluster_rows = F,
gaps_row = gap1,
labels_row = sub1$labels,
cellwidth = 9,
cellheight = 9,
#color=colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist)),
#breaks=breakslist,
legend=F,
labels_col = weeks))
str(sub1)
str(ds.plot)
str(ds1)
ggplot(ds1, aes(time, ID)) + geom_tile(aes(fill = value),
colour = "white") + scale_fill_manual(values=c("red", "blue", "black"))
ggplot(ds1, aes(time, ID)) + geom_tile(aes(fill = serotype),
colour = "white")
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, ID)) + geom_tile(aes(fill = serotype),
colour = "white") +
scale_fill_manual(values=c("red", "blue", "black"))
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, ID)) + geom_tile(aes(fill = serotype),
colour = "white") +
scale_fill_manual(values=c("red", "blue", "black"))
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, ID)) + geom_tile(aes(fill = serotype),
colour = "white")
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, ID)) + geom_tile(aes(fill = serotype),
colour = "white") +
facet_wrap(~season)
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, ID)) + geom_tile(aes(fill = serotype),
colour = "white")
View(ds1)
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season)
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
#ds1 <- data.array[target,,]
ds1 <- clean_pcr$clean_pcr %>%
mutate( lyta= if_else( lyta==9999,NA_real_, lyta),
piab= if_else( piab==9999,NA_real_, piab),
season = substr(ID,1,2),
seasonid =as.numeric(substring(ID, 4)),
seasonhh= as.numeric(substring(Household, 4)),
serotype = if_else(serotype=='15 B/C', '15B/C', serotype),
st=as.factor(serotype)
) %>%
filter(ID !='S2_NA') %>%
arrange(season, seasonid) %>%
group_by(season, seasonid, seasonhh) %>%
mutate(sampleID=cur_group_id()) %>%
ungroup() %>%
group_by(season,seasonhh) %>%
mutate(house=cur_group_id(),
plot.index= house + (sampleID) ) %>%
ungroup() %>%
arrange(season,seasonhh, seasonid)
weeks<- paste0('Week ', c(0,2,4,6,8,10))
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
#ds1 <- data.array[target,,]
ds1 <- clean_pcr$clean_pcr %>%
mutate( lyta= if_else( lyta==9999,NA_real_, lyta),
piab= if_else( piab==9999,NA_real_, piab),
season = substr(ID,1,2),
seasonid =as.numeric(substring(ID, 4)),
seasonhh= as.numeric(substring(Household, 4)),
serotype = if_else(serotype=='15 B/C', '15B/C', serotype),
serotype = if_else(is.na(serotype), 'piaB-', serotype),
st=as.factor(serotype)
) %>%
filter(ID !='S2_NA') %>%
arrange(season, seasonid) %>%
group_by(season, seasonid, seasonhh) %>%
mutate(sampleID=cur_group_id()) %>%
ungroup() %>%
group_by(season,seasonhh) %>%
mutate(house=cur_group_id(),
plot.index= house + (sampleID) ) %>%
ungroup() %>%
arrange(season,seasonhh, seasonid)
weeks<- paste0('Week ', c(0,2,4,6,8,10))
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
+ scale_colour_brewer()
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_colour_brewer()
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_colour_brewer()
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_colour_brewer(palette = "Set1")
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_fill_brewer(direction = -1)
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_fill_brewer(direction = -1, type='qual')
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_fill_fermenter(direction = -1, type='qual')
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_fill_distiller(direction = -1, type='qual')
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
scale_fill_distiller(direction = -1, type='qual')
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
#ds1 <- data.array[target,,]
ds1 <- clean_pcr$clean_pcr %>%
mutate( lyta= if_else( lyta==9999,NA_real_, lyta),
piab= if_else( piab==9999,NA_real_, piab),
season = substr(ID,1,2),
seasonid =as.numeric(substring(ID, 4)),
seasonhh= as.numeric(substring(Household, 4)),
serotype = if_else(serotype=='15 B/C', '15B/C', serotype),
serotype = if_else(is.na(serotype), 'piaB-', NA_character_),
st=as.factor(serotype)
) %>%
filter(ID !='S2_NA') %>%
arrange(season, seasonid) %>%
group_by(season, seasonid, seasonhh) %>%
mutate(sampleID=cur_group_id()) %>%
ungroup() %>%
group_by(season,seasonhh) %>%
mutate(house=cur_group_id(),
plot.index= house + (sampleID) ) %>%
ungroup() %>%
arrange(season,seasonhh, seasonid)
weeks<- paste0('Week ', c(0,2,4,6,8,10))
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() #+
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
#ds1 <- data.array[target,,]
ds1 <- clean_pcr$clean_pcr %>%
mutate( lyta= if_else( lyta==9999,NA_real_, lyta),
piab= if_else( piab==9999,NA_real_, piab),
season = substr(ID,1,2),
seasonid =as.numeric(substring(ID, 4)),
seasonhh= as.numeric(substring(Household, 4)),
serotype = if_else(serotype=='15 B/C', '15B/C', serotype),
serotype = if_else(is.na(serotype), NA_character_, serotype),
st=as.factor(serotype)
) %>%
filter(ID !='S2_NA') %>%
arrange(season, seasonid) %>%
group_by(season, seasonid, seasonhh) %>%
mutate(sampleID=cur_group_id()) %>%
ungroup() %>%
group_by(season,seasonhh) %>%
mutate(house=cur_group_id(),
plot.index= house + (sampleID) ) %>%
ungroup() %>%
arrange(season,seasonhh, seasonid)
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
p1 <- ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
p1
p1
dev.off()
p1
par(mfrow=c(1,1,))
par(mfrow=c(1,1))
p1
p1 <- ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic() +
ds1 %>%
filter(time<=6)
p1 <- ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, seasonid)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~season) +
theme_classic()
p1
names(ds1)
p1 <- ds1 %>%
filter(time<=6) %>%
ggplot( aes(time, Household)) + geom_tile(aes(fill = serotype),
colour = "white")  +
facet_wrap(~HH_order) +
theme_classic()
p1
