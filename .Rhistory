ds.names <- names(ds)
ds.names <- intersect(ds.names,cols.keep)
ds <- ds[,ds.names]
ds$Sample <- paste0('S1_', ds$Sample)
return(ds)
})
file_list_s2 <- list.files(path="./Data/cleaned_season2")
all.res.season2 <-
lapply(file_list_s2, function(x){
print(x)
ds <- read_excel(paste0("./Data/cleaned_season2/",x), skip=19)
ds$expt <- substr(x,1,4)
ds$Sample <- as.character(ds$Sample)
ds$Target <- as.character(ds$Target)
ds$Cq <- as.numeric(as.character(ds$Cq))
cols.keep <-
c('Cq','Sample','Target','Content','expt','Biological Set Name')
ds.names <- names(ds)
ds.names <- intersect(ds.names,cols.keep)
ds <- ds[,ds.names]
ds$`Biological Set Name` <- NA
ds$Sample <- paste0('S2_', ds$Sample)
return(ds)
})
all.res <- c( all.res.season1,all.res.season2)
all.res <- lapply(1:length(all.res), function(x){ all.res[[x]]$plate= x
return(all.res[[x]])
})
test1 <- lapply(all.res, function(x)  is.character(x$Target))
b1 <- bind_rows(all.res)
b1$Cq[is.na(b1$Cq)] <- 45
b1$Target[is.na(b1$Target)] <-
b1$`Biological Set Name`[is.na(b1$Target)]
b1 <- b1[b1$Content!='Std',]
b1$Target <- gsub(' ' ,'', b1$Target, fixed=T)
b1$Target <- tolower(b1$Target)
b1$Target[grep('lyta',b1$Target)] <- 'lyta'
b1$Target[grep('piab',b1$Target)] <- 'piab'
#b1$Sample[is.na(b1$Sample)] <- b1$`sample id`[is.na(b1$Sample)]
b1 <- b1[!is.na(b1$Sample),]
b1 <- b1[-grep('neg',b1$Sample),]
b1 <- b1[-grep('NA',b1$Sample),]
b1 <- b1[-grep('NTC',b1$Sample),]
b1 <- b1[-grep('NEG',b1$Sample),]
b1 <- b1[-grep('NEC',b1$Sample),]
b1 <- b1[-grep('nec',b1$Sample),]
b1 <- b1[-grep('ntc',b1$Sample),]
b1 <- b1[-grep('apex',b1$Sample),]
b1 <- b1[-grep('-1',b1$Sample),]
b1 <- b1[-grep('-2',b1$Sample),]
b1 <- b1[-grep('-3',b1$Sample),]
b1 <- b1[-grep('-4',b1$Sample),]
b1 <- b1[-grep('-5',b1$Sample),]
b1 <- b1[-grep('QC',b1$Sample),]
b1$Sample <- gsub('rep','',b1$Sample)
#b1$Sample <- round(as.numeric(b1$Sample),1)
c1 <- b1[, c('Sample','Cq','Target','plate')]
c1$Cq[is.na(c1$Cq)] <- 45
c1 <- c1 %>%
group_by(Sample ,Target) %>%
mutate(repN=row_number())
c1.rep <- reshape2::dcast(c1 ,  Target+Sample   ~ repN , value.var='Cq')
write.csv(c1.rep,'./Data/ct_by_sample_rep.csv')
c1.m <- reshape2::melt(c1, id.vars= c('Sample','Target','plate', 'repN'))
##If sample tested multiple times call pos if pos on multiple runs. Ct<40=pos
c1.m <- c1.m %>%
group_by(Sample, Target) %>%
mutate(N_tests= n(), n_pos=sum(value<40), ct_pos=mean(value[value<40], na.rm=T), ct_min=min(value, na.rm=T) ) %>%
ungroup()
#if negative, set ct to 45
c1.m$ct_pos[is.nan(c1.m$ct_pos)] <- 45
c1.m$ct_pos2 <- c1.m$ct_pos
#If min Ct value<35, use ave value of positive regardless of number of tests performed.
c1.m$ct_pos2[c1.m$ct_min <= 35] <- c1.m$ct_pos[c1.m$ct_min <= 35] #if ave is <35, call positive regardless of N tests
#If min Ct>35, and 3 or more tests performed, with only 1 positive, call it a negative
c1.m$ct_pos2[c1.m$N_tests>=3 & c1.m$n_pos<=1 & c1.m$ct_min > 35] <- 45 #if 3 or more tests, and 0 or 1 are weakly positive or neg, then call it negative
#If min >35, with at least 2 tests performed and at least 2 were positive, call it positive
c1.m$ct_pos2[c1.m$N_tests>=2 & c1.m$n_pos>= 2 & c1.m$ct_min > 35] <-
c1.m$ct_pos[c1.m$N_tests>=2 & c1.m$n_pos>= 2 & c1.m$ct_min > 35] #if 2 or more tests, and 0 or 1 are weakly positive or neg, then call it negative
#if min Ct>35, N tests is <=2 and only 1 positive, call it negative
c1.m$ct_pos2[c1.m$N_tests<=2 & c1.m$n_pos< c1.m$N_tests & c1.m$ct_min > 35] <- 45 #if 2 or fewer tests, and at least 1 is positive, call positive
c1.c <- reshape2::dcast(c1.m[,c('Sample','variable','Target','ct_pos2')], Sample +variable ~ Target, fun.aggregate = min, fill=9999, value.var='ct_pos2')
c1.c$pos <- c1.c$lyta<40 & c1.c$piab<40
write.csv(c1.c, './Data/cleaned_file_s2.csv')
all.ids <- unique(c1.c$Sample)
all.ids <- all.ids[substr(all.ids,1,2)=='S2']
all.ids <- gsub(".*_","",all.ids)
all.ids <- sub('\\..*', '', all.ids)
all.ids <- sort(as.numeric(as.character(unique(all.ids))))
key4b <- cbind.data.frame('id'=all.ids ,'Household'=rep(1:(length(all.ids)/2),each=2) )
key4b$id <- paste0('S2_', key4b$id)
key4b$Household <- paste0('S2_', key4b$Household) #SEASON 1 key
key1ab <- bind_rows(key4a, key4b)
c1.m$ID <- sub("\\.[0-9]+$", "", c1.m$Sample)
c1.m$time_1a <- sub('.*\\.', '', c1.m$Sample)
c1.m$time_2a <- as.numeric(substr(c1.m$time_1a,1,1))
c1.m$time_2b <- as.numeric(substr(c1.m$time_1a,2,2))
c1.m$time_2b[is.na(c1.m$time_2b)] <- 0
c1.m$time <- round(c1.m$time_2a + c1.m$time_2b/10)
c1.m <- c1.m[order(c1.m$ID, c1.m$time),]
c1.m <- merge(c1.m, key1ab, by.x='ID',by.y='id', all.x=T)
c1.m <- c1.m[!(c1.m$ID %in% c('S1_38','S1_39', 'S1_48','S1_49', 'S1_58', 'S1_59')),]
d1 <- dcast(c1.m[,c('ID','Target','time','ct_pos2')],  ID +Target ~ time, fun.aggregate = min, na.rm=T, fill=9999, value.var = 'ct_pos2')
write.csv(d1, './Data/Result1_S2.csv')
d1.alt <- dcast(c1.m[,c('ID','Target','time','ct_pos2')],  ID +time~ Target, fun.aggregate = min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.alt <- d1.alt[!(d1.alt$ID %in% c('S1_38','S1_39', 'S1_48','S1_49', 'S1_58', 'S1_59')),] #these IDs were not included in study
write.csv(d1.alt, './Data/Result2_S2.csv') #Anne's preferred format
c1.m <- c1.m[!(c1.m$ID %in% c('S1_38','S1_39', 'S1_48','S1_49', 'S1_58', 'S1_59')),] #these IDs were not included in study
d1.a <- acast(c1.m[,c('ID','Target','time','ct_pos2','Household')], Target ~ ID +Household ~ time, fun.aggregate=min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.ds <- reshape2::dcast(c1.m[,c('ID','Target','time','ct_pos2','Household')],   Household +ID+ time ~ Target, fun.aggregate=min, na.rm=T, fill=9999, value.var = 'ct_pos2')
d1.ds <- d1.ds %>%
group_by(Household ) %>%
mutate(HH_order= as.numeric(as.factor(ID))) %>%
ungroup()
saveRDS(d1.ds, './data/PCR_compiled.rds')
out.list <- list('clean_pcr'=d1.ds,  'pcr_summary'=c1.m, 'pcr_summary_long'=c1.c)
}
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(reshape2)
library(dplyr)
library(stringr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
library(gridExtra)
library(ggplot2)
library(ggplotify)
library(table1)
library(lubridate)
library(patchwork)
library(msm)
library(gee)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr_fun()
plot(clean_pcr$pcr_summary_long$lyta, clean_pcr$pcr_summary_long$piab, xlim= c(45,0), ylim=c(45,0), xlab='lytA', ylab='piaB', bty='l')
abline(a=0, b=1)
abline(h=40, v=40, col='gray', lty=2)
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
lyta.plot <- heat.fun(target='lyta')
c1.m.m <- melt(clean_pcr$pcr_summary[,c('Target','ID','Sample','ct_pos2','Household') ],
id.vars=c('Target','ID','Sample','Household'))
c1.m.c <- dcast(c1.m.m, ID + Household + Sample  ~Target, fun.aggregate = min, fill=999)
#N people
N.id <- length(unique(c1.m.c$ID))
N.id
#N households
N.hh<- length(unique(c1.m.c$Household))
N.hh
#N samples
nrow(c1.m.c)
#length(unique(c1.m.c$Sample[c1.m$Target=='piab']))
#length(unique(c1.m.c$Sample[c1.m$Target=='lyta']))
#N positive
sum(c1.m.c$piab<40 )
sum(c1.m.c$piab<40  &c1.m.c$lyta>=40)
sum(c1.m.c$piab<40  &c1.m.c$lyta<40)
#% positive
sum(c1.m.c$piab<40 )/nrow(c1.m.c)
#N positive lytA
sum(c1.m.c$lyta<40 )
sum(c1.m.c$lyta<40 )/nrow(c1.m.c)
#Count N people with piaB positives by IDs
c1.m.spl.id <- split(c1.m.c, c1.m.c$ID)
N_pos_people <- sum(sapply(c1.m.spl.id, function(x){
min(x$piab) <40
}
))
N_pos_people
N_pos_people/N.id
#Count N HH with piab positives by IDs
c1.m.spl.id <- split(c1.m.c, c1.m.c$Household)
n_pos_hh <- sum(sapply(c1.m.spl.id, function(x){
min(x$piab) <40
}
))
n_pos_hh
n_pos_hh/N.hh
# ## Ave age
# age1 <- read_excel('./Data/confidential/AGE Scope Participants samples pick-up 06-15-2021.xlsx', skip=1)
# names(age1)[1] <- 'ID'
# age1 <- age1[ which(age1$ID %in% unique(c1.m.c$ID)),]
# mean(age1$AGE)
# range(age1$AGE)
s1_data <- clean_s1_surveys()
saveRDS(s1_data,'./Data/confidential/s1_survey_clean.rds')
s2_data <- clean_s2_surveys()
s1 <- s1_data$survey_and_pcr_s1 %>%
rename(flu_shot1=flu_shot) %>%
mutate(flu_shot = if_else(flu_shot1=='Yes',1,
if_else(flu_shot1=='No',2, NA_real_)),
diabetes = if_else(diabetes=='Yes',1,
if_else(diabetes=='No',2, NA_real_)),
asthma = if_else(asthma=='Yes',1,
if_else(asthma=='No',2, NA_real_))
) %>%
select(ID, time, Household, lyta, piab,activities, activity_family, activity_friends, activity_community_center, acitivity_fitness,child_contact,child_contact_u12m,child_contact_13_23m,child_contact_24_59m ,child_contact_5_10y,child_contact_over10y , Age, Gender, Race, Ethnicity,child_contact_often,child_contact_hours,recent_abx,recent_runny_nose, recent_nasal,
smoke_dic, pneu_vax_dic, flu_shot,education,diabetes, asthma)  %>%
rename(pneu_vax=pneu_vax_dic, smoke=smoke_dic)
s2 <- s2_data$survey_and_pcr_s2  %>%
mutate(recent_runny_nose = if_else(running_nose==1,'Yes', if_else(running_nose==2,'No','999') ),
recent_nasal = if_else(nasal_congestion==1,'Yes', if_else(nasal_congestion==2,'No','999') ),
recent_abx = if_else(antibiotics_2weeks==1,'Yes', if_else(antibiotics_2weeks==0,'No','999') )
)%>%
select(ID, time, Household,s1_match, lyta, piab,activities, activity_family, activity_friends, activity_community_center, acitivity_fitness,child_contact, child_contact_u12m,child_contact_13_23m,child_contact_24_59m ,child_contact_5_10y,child_contact_over10y, Age, Gender, Race, Ethnicity,
child_contact_often,child_contact_hours,recent_runny_nose,recent_nasal, recent_abx,recent_pneumo_vax, recent_flu_vax, recent_covid_vax,
smoke,pneu_vax, flu_shot,education,diabetes, asthma)
ds.c <- bind_rows(s1, s2) %>%
mutate(season= str_extract(ID, "[^_]+"),
piab_pos=1*(piab<45) ,
Age=round(Age),
agec = if_else(Age>=60 & Age <70 ,1,
if_else(Age>=70 & Age<100 ,2,NA_real_ )),
smoke=if_else(smoke==2,0, smoke),
flu_shot=if_else(flu_shot==2,0, flu_shot),
diabetes=if_else(diabetes==2,0, diabetes),
asthma=if_else(asthma==2,0, asthma)) %>%
filter(!is.na(ID))
#Missing gender: S1_1, S1_11, S1_12, S1_18, S1_19, S1_2, S1_21, S1_28, S1_29, S1_3, S1_34, S1_35, S1_37, S1_4, s1_44, S1_45, s1_5, S1_6, s1_60, s1_61, S1_62, S1_63, s2_77
write.csv(ds.c,'./Data/pcr_survey_combined.csv')
saveRDS(ds.c,'./Data/pcr_survey_combined.rds')
View(ds.c)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
options(dplyr.summarise.inform = FALSE)
library(ggplot2)
library(ggalluvial)
library(kableExtra)
library(knitr)
library(readxl)
library(gee)
library(reshape2)
library(flextable)
library(msm)
library(patchwork)
library(gridExtra)
library(pheatmap)
library(RColorBrewer)
library(table1)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr_fun()
pcr_summary_long <- readRDS('./Data/PCR_compiled.rds')
pcr_survey <- readRDS('./Data./pcr_survey_combined.rds') %>%
mutate(Gender = if_else(Gender %in% c('F','Female'),'F',Gender),
Gender = if_else(Gender %in% c('M','Male'),'M',Gender),
child_contact_often= if_else(is.na(child_contact_often),999,child_contact_often)) %>%
filter(piab != 9999) %>%
mutate(piab_pos = if_else(piab < 40,1,0),
lyta_pos = if_else(lyta < 40,1,0),
season=substr(ID,1,2),
Gender=if_else(ID=='S2_77' & is.na(Gender), 'F',Gender))
unique.age <- pcr_survey %>%
group_by(ID) %>%
summarize(Age=mean(Age, na.rm=T))
hist(unique.age$Age, main='Distribution of ages', xlab='Age(y)')
unique.age %>%
summarize(mean=mean(Age, na.rm=T), min=min(Age, na.rm=T), max=max(Age, na.rm=T))
first_visit <- pcr_survey %>% filter(time==1) %>%
mutate(Race=tolower(Race), Ethnicity=tolower(Ethnicity), smoke=as.factor(smoke), pneu_vax=as.factor(pneu_vax), flu_shot=as.factor(flu_shot) , diabetes=as.factor(diabetes), asthma=as.factor(asthma),
education=toupper(education),
education_level= if_else(grepl('HIGH', education) |
grepl("GED",education) , 'HS',
if_else(grepl('BACHELOR', education) |
grepl('COLLEGE', education)|
grepl('ASSOCIATE', education)|
grepl('BA', education) ,'Undergrad',
if_else(grepl('MASTER', education)|
grepl('GRADUATE', education)|
grepl('MBA', education)|
grepl('PHD', education)|
grepl('JD', education)|
grepl('J.D.', education)|
grepl('MPH', education)|
grepl('MD', education)|
grepl('DOCTORATE', education), 'Graduate', 'Unknown')))
)
tab1 <- table1( ~Age + Gender + Race +Ethnicity + activity_family + activity_friends + activity_community_center +  smoke+ diabetes + asthma + pneu_vax + flu_shot +education_level , data=first_visit)
tab1 <- as.data.frame(tab1)
flextable(tab1)
p1 <- ggplot(pcr_summary_long,aes(x=lyta, y=piab, alpha=0.5))+
theme_classic() +
geom_point() +
ylim(45,10) +
xlim(45,10)+
xlab('lytA') +
ylab('piaB') +
theme(legend.position = "none") +
geom_abline(col='gray', lty=2) +
geom_hline(yintercept=40,col='gray', lty=3)+
geom_vline(xintercept=40,col='gray', lty=3)
p1
piab.plot <- heat.fun(target='piab')
# breakslist<-seq(15,45,by=1)
#
# cols1 <- colorRampPalette(c('red4','red','darkorange','orange','gold','lightgoldenrod1','white','white'))(length(breakslist))
#
# p1 <- ggplot(d1.ds, aes(time, HH_order, fill= piab)) +
#   geom_tile() +
#   scale_fill_viridis_c(option = "B", direction = -1) +
#
#   theme_classic()+
#   ylab('Serotype tested')+
#    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#   facet_wrap(~Household, ncol=3)+
#   theme(
#   strip.text.x = element_blank()
# )
# p1
piab.plot <- heat.fun(target='piab')
t1 <- pcr_summary_long %>%
filter(piab != 9999) %>%
mutate(piab_pos = if_else(piab < 40,1,0),
lyta_pos = if_else(lyta < 40,1,0)) %>%
summarize(N_piaB= sum(piab_pos), N_test= n(), `Percent piab`=round(mean(piab_pos)*100,2) )
flextable(t1)
t2 <- pcr_summary_long %>%
filter(piab != 9999) %>%
mutate(piab_pos = if_else(piab < 40,1,0),
lyta_pos = if_else(lyta < 40,1,0), season=substr(ID,1,2)) %>%
group_by(season) %>%
summarize(N_piaB= sum(piab_pos), N_test= n(), Pct_piab=round(mean(piab_pos)*100,1) )
flextable(t2)
pcr_summary_long %>%
filter(!is.na(Household)) %>%
summarize(N_hh=length(unique(pcr_summary_long$Household)), N_people=length(unique(pcr_summary_long$ID)))
t3 <- pcr_summary_long %>%
filter(piab != 9999) %>%
mutate(piab_pos = if_else(piab < 40,1,0),
lyta_pos = if_else(lyta < 40,1,0),
season=substr(ID,1,2) ) %>%
group_by(ID) %>%
summarize(any_pos_piab = max(piab_pos)) %>%
ungroup() %>%
summarize(N_people=n(), N_pos=sum(any_pos_piab), `Percent Positive People`=round(100*mean(any_pos_piab),1))
flextable(t3)
p1
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
options(dplyr.summarise.inform = FALSE)
library(ggplot2)
library(ggalluvial)
library(kableExtra)
library(knitr)
library(readxl)
library(gee)
library(reshape2)
library(flextable)
library(msm)
library(patchwork)
library(gridExtra)
library(pheatmap)
library(RColorBrewer)
library(table1)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr_fun()
clean_pcr <- clean_pcr_fun()
t5 <- pcr_survey %>%
group_by(recent_abx) %>%
summarize(N_piaB= sum(piab_pos), N_test= n(), Pct_piab=round(mean(piab_pos)*100,1) )%>%
mutate( recent_abx = if_else(is.na(recent_abx), 'Missing',recent_abx) )
t5 <- as_grouped_data(x = t5, groups = c("recent_abx"), columns = NULL)
flextable(t5)
View(pcr_survey)
t5 <- pcr_survey %>%
mutate(education=toupper(education),
education_level= if_else(grepl('HIGH', education) |
grepl("GED",education) , 'HS',
if_else(grepl('BACHELOR', education) |
grepl('COLLEGE', education)|
grepl('ASSOCIATE', education)|
grepl('BA', education) ,'Undergrad',
if_else(grepl('MASTER', education)|
grepl('GRADUATE', education)|
grepl('MBA', education)|
grepl('PHD', education)|
grepl('JD', education)|
grepl('J.D.', education)|
grepl('MPH', education)|
grepl('MD', education)|
grepl('DOCTORATE', education), 'Graduate', 'Unknown')))) %>%
group_by(education_level) %>%
summarize(N_piaB= sum(piab_pos), N_test= n(), Pct_piab=round(mean(piab_pos)*100,1) ) %>%
mutate(education_level = if_else(is.na(education_level),'Unknown', education_level))
t5 <- as_grouped_data(x = t5, groups = c("education_level"), columns = NULL)
flextable(t5)
t14  <- pcr_survey %>%
filter(child_contact != 9999) %>% #must answer question...lots of missing surveys in S1 %>%
mutate(child_contact_hours = if_else(is.na(child_contact_hours) |child_contact_hours==999,0,child_contact_hours) ) %>%
group_by(Gender, season,child_contact_hours ) %>%
summarize(N=n()) %>%
ungroup() %>%
group_by(Gender,season) %>%
mutate(Percent= round(100*N/sum(N),2)) %>%
ungroup()
t14.t <- as_grouped_data(x = t14, groups = c("Gender", 'season'), columns = NULL)
flextable(t14.t)
t16  <- pcr_survey %>%
mutate(child_contact= if_else(is.na(child_contact)| child_contact==9999,9999,child_contact)) %>%
group_by( child_contact,  ) %>%
summarize(N=n(), N_pos=sum(piab_pos), Pct_Pos=round(100*mean(piab_pos),1))
t16 <- as_grouped_data(x = t16, groups = c("child_contact"), columns = NULL)
flextable(t16)
t17  <- pcr_survey %>%
mutate(child_contact_hours= if_else(is.na(child_contact_hours),999,child_contact_hours)) %>%
group_by(  child_contact_hours ) %>%
summarize(N=n(), N_pos=sum(piab_pos), Pct_Pos=round(100*mean(piab_pos),1))
#t17 <- as_grouped_data(x = t17, groups = c("season"), columns = NULL)
flextable(t17)
t17  <- pcr_survey %>%
group_by(Gender, child_contact_often ) %>%
summarize(N=n(), N_pos=sum(piab_pos), Pct_Pos=round(100*mean(piab_pos),1))
t17 <- as_grouped_data(x = t17, groups = c("Gender"), columns = NULL)
flextable(t17)
4/27
5/27
6/27
6/21
5/21
4/21
6/30
View(v)
View(pcr_survey)
96+30
21+76+67+365
30+96+91+345
View(pcr_survey)
unique(unique(pcr_survey$child_contact_often))
t17  <- pcr_survey %>%
mutate(child_contact_often= if_else(is.na(child_contact_often),999,child_contact_often)) %>%
group_by(Gender, child_contact_often ) %>%
summarize(N=n(), N_pos=sum(piab_pos), Pct_Pos=round(100*mean(piab_pos),1))
t17 <- as_grouped_data(x = t17, groups = c("Gender"), columns = NULL)
flextable(t17)
21+76+67+365
table(pcr_survey$Gender)
table(ds.c$Gender)
455+74
table(ds.c$Gender, ds.c$season)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
options(dplyr.summarise.inform = FALSE)
library(ggplot2)
library(ggalluvial)
library(kableExtra)
library(knitr)
library(readxl)
library(gee)
library(reshape2)
library(flextable)
library(msm)
library(patchwork)
library(gridExtra)
library(pheatmap)
library(RColorBrewer)
library(table1)
source('heat.fun.R')
source('heat.fun.contact.R')
source('./R/clean_pcr.R')
source('./R/clean_s1_surveys.R')
source('./R/clean_s2_surveys.R')
clean_pcr <- clean_pcr_fun()
pcr_survey <- readRDS('./Data./pcr_survey_combined.rds')
STR(pcr_survey)
str(pcr_survey)
unique(pcr_survey$activities)
unique(pcr_survey$activity_friends)
unique(pcr_survey$child_contact
)
unique(pcr_survey$child_contact_24_59m
)
unique(pcr_survey$Gender
()
unique(pcr_survey$Gender)
unique(pcr_survey$Race)
unique(pcr_survey$Ethnicity)
unique(pcr_survey$child_contact_often)
unique(pcr_survey$child_contact_time)
unique(pcr_survey$child_contact_hours)
unique(pcr_survey$recent_abx)
unique(pcr_survey$smoke)
unique(pcr_survey$pneu_vax)
unique(pcr_survey$education)
unique(pcr_survey$diabetes)
unique(pcr_survey$agec)
